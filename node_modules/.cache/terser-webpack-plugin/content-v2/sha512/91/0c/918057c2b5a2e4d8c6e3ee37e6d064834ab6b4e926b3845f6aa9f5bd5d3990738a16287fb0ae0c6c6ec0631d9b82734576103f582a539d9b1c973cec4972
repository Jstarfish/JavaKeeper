{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{606:function(t,a,s){\"use strict\";s.r(a);var r=s(6),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-mq-banner.jpg\",alt:\"\"}})]),t._v(\" \"),s(\"p\",[t._v(\"现如今的互联网应用大都是采用 \"),s(\"strong\",[t._v(\"分布式系统架构\")]),t._v(\" 设计的，所以 \"),s(\"strong\",[t._v(\"消息队列\")]),t._v(\" 已经逐渐成为企业应用系统 \"),s(\"strong\",[t._v(\"内部通信\")]),t._v(\" 的核心手段，\")]),t._v(\" \"),s(\"p\",[t._v(\"它具有 \"),s(\"strong\",[t._v(\"低耦合\")]),t._v(\"、\"),s(\"strong\",[t._v(\"可靠投递\")]),t._v(\"、\"),s(\"strong\",[t._v(\"广播\")]),t._v(\"、\"),s(\"strong\",[t._v(\"流量控制\")]),t._v(\"、\"),s(\"strong\",[t._v(\"最终一致性\")]),t._v(\" 等一系列功能。\")]),t._v(\" \"),s(\"p\",[t._v(\"当前使用较多的 \"),s(\"strong\",[t._v(\"消息队列\")]),t._v(\" 有 \"),s(\"code\",[t._v(\"RabbitMQ\")]),t._v(\"、\"),s(\"code\",[t._v(\"RocketMQ\")]),t._v(\"、\"),s(\"code\",[t._v(\"ActiveMQ\")]),t._v(\"、\"),s(\"code\",[t._v(\"Kafka\")]),t._v(\"、\"),s(\"code\",[t._v(\"ZeroMQ\")]),t._v(\"、\"),s(\"code\",[t._v(\"MetaMQ\")]),t._v(\" 等，而部分\"),s(\"strong\",[t._v(\"数据库\")]),t._v(\" 如 \"),s(\"code\",[t._v(\"Redis\")]),t._v(\"、\"),s(\"code\",[t._v(\"MySQL\")]),t._v(\" 以及 \"),s(\"code\",[t._v(\"phxsql\")]),t._v(\" ，如果硬搞的话，其实也可实现消息队列的功能。\")]),t._v(\" \"),s(\"p\",[t._v(\"可能有人觉得，各种开源的 MQ 已经足够使用了，为什么需要用 Redis 实现 MQ 呢？\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"有些简单的业务场景，可能不需要重量级的 MQ 组件（相比 Redis 来说，Kafka 和 RabbitMQ 都算是重量级的消息队列）\")])]),t._v(\" \"),s(\"p\",[t._v(\"那你有考虑过用 Redis 做消息队列吗？\")]),t._v(\" \"),s(\"p\",[t._v(\"这一章，我会结合消息队列的特点和 Redis 做消息队列的使用方式，以及实际项目中的使用，来和大家探讨下 Redis 消息队列的方案。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"一、回顾消息队列\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、回顾消息队列\"}},[t._v(\"#\")]),t._v(\" 一、回顾消息队列\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"strong\",[t._v(\"消息队列\")]),t._v(\" 是指利用 \"),s(\"strong\",[t._v(\"高效可靠\")]),t._v(\" 的 \"),s(\"strong\",[t._v(\"消息传递机制\")]),t._v(\" 进行与平台无关的 \"),s(\"strong\",[t._v(\"数据交流\")]),t._v(\"，并基于\"),s(\"strong\",[t._v(\"数据通信\")]),t._v(\"来进行分布式系统的集成。\")]),t._v(\" \"),s(\"p\",[t._v(\"通过提供 \"),s(\"strong\",[t._v(\"消息传递\")]),t._v(\" 和 \"),s(\"strong\",[t._v(\"消息排队\")]),t._v(\" 模型，它可以在 \"),s(\"strong\",[t._v(\"分布式环境\")]),t._v(\" 下提供 \"),s(\"strong\",[t._v(\"应用解耦\")]),t._v(\"、\"),s(\"strong\",[t._v(\"弹性伸缩\")]),t._v(\"、\"),s(\"strong\",[t._v(\"冗余存储\")]),t._v(\"、\"),s(\"strong\",[t._v(\"流量削峰\")]),t._v(\"、\"),s(\"strong\",[t._v(\"异步通信\")]),t._v(\"、\"),s(\"strong\",[t._v(\"数据同步\")]),t._v(\" 等等功能，其作为 \"),s(\"strong\",[t._v(\"分布式系统架构\")]),t._v(\" 中的一个重要组件，有着举足轻重的地位。\")])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/mq.jpg\",alt:\"\"}})]),t._v(\" \"),s(\"p\",[t._v(\"现在回顾下，我们使用的消息队列，一般都有什么样的特点：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"三个角色：生产者、消费者、消息处理中心\")]),t._v(\" \"),s(\"li\",[t._v(\"异步处理模式：\"),s(\"strong\",[t._v(\"生产者\")]),t._v(\" 将消息发送到一条 \"),s(\"strong\",[t._v(\"虚拟的通道\")]),t._v(\"（消息队列）上，而无须等待响应。\"),s(\"strong\",[t._v(\"消费者\")]),t._v(\" 则 \"),s(\"strong\",[t._v(\"订阅\")]),t._v(\" 或是 \"),s(\"strong\",[t._v(\"监听\")]),t._v(\" 该通道，取出消息。两者互不干扰，甚至都不需要同时在线，也就是我们说的 \"),s(\"strong\",[t._v(\"松耦合\")])]),t._v(\" \"),s(\"li\",[t._v(\"可靠性：消息要可以保证不丢失、不重复消费、有时可能还需要顺序性的保证\")])]),t._v(\" \"),s(\"p\",[t._v(\"撇开我们常用的消息中间件不说，你觉得 Redis 的哪些数据类型可以满足 MQ 的常规需求~~\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"二、redis-实现消息队列\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、redis-实现消息队列\"}},[t._v(\"#\")]),t._v(\" 二、Redis 实现消息队列\")]),t._v(\" \"),s(\"p\",[t._v(\"思来想去，只有 List 和 Streams 两种数据类型，可以实现消息队列的这些需求，当然，Redis 还提供了发布、订阅(pub/sub) 模式。\")]),t._v(\" \"),s(\"p\",[t._v(\"我们逐一看下这 3 种方式的使用和场景。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-1-list-实现消息队列\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-list-实现消息队列\"}},[t._v(\"#\")]),t._v(\" 2.1 List 实现消息队列\")]),t._v(\" \"),s(\"p\",[t._v(\"Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。\")]),t._v(\" \"),s(\"p\",[t._v(\"所以常用来做\"),s(\"strong\",[t._v(\"异步队列\")]),t._v(\"使用。将需要延后处理的任务结构体序列化成字符串塞进 Redis 的列表，另一个线程从这个列表中轮询数据进行处理。\")]),t._v(\" \"),s(\"p\",[t._v(\"Redis 提供了好几对 List 指令，先大概看下这些命令，混个眼熟\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"list-常用命令\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#list-常用命令\"}},[t._v(\"#\")]),t._v(\" List 常用命令\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"命令\")]),t._v(\" \"),s(\"th\",[t._v(\"用法\")]),t._v(\" \"),s(\"th\",[t._v(\"描述\")]),t._v(\" \"),s(\"th\",[t._v(\"示例\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"LPUSH\")])]),t._v(\" \"),s(\"td\",[t._v(\"LPUSH key value [value ...]\")]),t._v(\" \"),s(\"td\",[t._v(\"将一个或多个值 value 插入到列表 key 的表头如果有多个 value 值，那么各个 value 值按从左到右的顺序依次插入到表头\")]),t._v(\" \"),s(\"td\",[t._v(\"正着进反着出\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"LPUSHX\")]),t._v(\" \"),s(\"td\",[t._v(\"LPUSHX key value\")]),t._v(\" \"),s(\"td\",[t._v(\"将值 value 插入到列表 key 的表头，当且仅当 key 存在并且是一个列表。和 LPUSH 命令相反，当 key 不存在时， LPUSHX 命令什么也不做\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"RPUSH\")])]),t._v(\" \"),s(\"td\",[t._v(\"RPUSH key value [value ...]\")]),t._v(\" \"),s(\"td\",[t._v(\"将一个或多个值 value 插入到列表 key 的表尾(最右边)\")]),t._v(\" \"),s(\"td\",[t._v(\"怎么进怎么出\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"RPUSHX\")]),t._v(\" \"),s(\"td\",[t._v(\"RPUSHX key value\")]),t._v(\" \"),s(\"td\",[t._v(\"将值 value 插入到列表 key 的表尾，当且仅当 key 存在并且是一个列表。和 RPUSH 命令相反，当 key 不存在时， RPUSHX 命令什么也不做。\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"LPOP\")])]),t._v(\" \"),s(\"td\",[t._v(\"LPOP key\")]),t._v(\" \"),s(\"td\",[t._v(\"移除并返回列表 key 的头元素。\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"BLPOP\")])]),t._v(\" \"),s(\"td\",[t._v(\"BLPOP key [key ...] timeout\")]),t._v(\" \"),s(\"td\",[t._v(\"移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"RPOP\")])]),t._v(\" \"),s(\"td\",[t._v(\"RPOP key\")]),t._v(\" \"),s(\"td\",[t._v(\"移除并返回列表 key 的尾元素。\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"BRPOP\")])]),t._v(\" \"),s(\"td\",[t._v(\"BRPOP key [key ...] timeout\")]),t._v(\" \"),s(\"td\",[t._v(\"移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"BRPOPLPUSH\")]),t._v(\" \"),s(\"td\",[t._v(\"BRPOPLPUSH source destination timeout\")]),t._v(\" \"),s(\"td\",[t._v(\"从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"RPOPLPUSH\")]),t._v(\" \"),s(\"td\",[t._v(\"RPOPLPUSH source destinationb\")]),t._v(\" \"),s(\"td\",[t._v(\"命令 RPOPLPUSH 在一个原子时间内，执行以下两个动作：将列表 source 中的最后一个元素(尾元素)弹出，并返回给客户端。将 source 弹出的元素插入到列表 destination ，作为 destination 列表的的头元素\")]),t._v(\" \"),s(\"td\",[t._v(\"RPOPLPUSH list01 list02\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"LSET\")])]),t._v(\" \"),s(\"td\",[t._v(\"LSET key index value\")]),t._v(\" \"),s(\"td\",[t._v(\"将列表 key 下标为 index 的元素的值设置为 value\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"LLEN\")])]),t._v(\" \"),s(\"td\",[t._v(\"LLEN key\")]),t._v(\" \"),s(\"td\",[t._v(\"返回列表 key 的长度。如果 key 不存在，则 key 被解释为一个空列表，返回 0 .如果 key 不是列表类型，返回一个错误\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"LINDEX\")])]),t._v(\" \"),s(\"td\",[t._v(\"LINDEX key index\")]),t._v(\" \"),s(\"td\",[t._v(\"返回列表 key 中，下标为 index 的元素。下标(index)参数 start 和 stop 都以 0 为底，也就是说，以 0 表示列表的第一个元素，以 1 表示列表的第二个元素，以此类推。\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"LRANGE\")])]),t._v(\" \"),s(\"td\",[t._v(\"LRANGE key start stop\")]),t._v(\" \"),s(\"td\",[t._v(\"返回列表 key 中指定区间内的元素，区间以偏移量 start 和 stop 指定\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"LREM\")]),t._v(\" \"),s(\"td\",[t._v(\"LREM key count value\")]),t._v(\" \"),s(\"td\",[t._v(\"根据参数 count 的值，移除列表中与参数 value 相等的元素\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"LTRIM\")]),t._v(\" \"),s(\"td\",[t._v(\"LTRIM key start stop\")]),t._v(\" \"),s(\"td\",[t._v(\"对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除\")]),t._v(\" \"),s(\"td\")]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"LINSERT\")]),t._v(\" \"),s(\"td\",[t._v(\"LINSERT key BEFORE|AFTER pivot value\")]),t._v(\" \"),s(\"td\",[t._v(\"将值 value 插入到列表 key 当中，位于值 pivot 之前或之后。当 pivot 不存在于列表 key 时，不执行任何操作。当 key 不存在时， key 被视为空列表，不执行任何操作。如果 key 不是列表类型，返回一个错误。\")]),t._v(\" \"),s(\"td\",[t._v(\"LINSERT list01 before c++ c#(在c++之前加上C#)\")])])])]),t._v(\" \"),s(\"p\",[t._v(\"挑几个弹入、弹出的命令就可以组合出很多\"),s(\"strong\",[t._v(\"姿势\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"LPUSH、RPOP  左进右出\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"RPUSH、LPOP  右进左出\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" lpush mylist a a b c d e\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" rpop mylist\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"a\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" rpop mylist\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"a\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" rpop mylist\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"b\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" \\n\")])])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-rpop.jpg\",alt:\"redis-RPOP\"}})]),t._v(\" \"),s(\"h4\",{attrs:{id:\"即时消费问题\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#即时消费问题\"}},[t._v(\"#\")]),t._v(\" 即时消费问题\")]),t._v(\" \"),s(\"p\",[t._v(\"通过 \"),s(\"code\",[t._v(\"LPUSH\")]),t._v(\"，\"),s(\"code\",[t._v(\"RPOP\")]),t._v(\" 这样的方式，会存在一个性能风险点，就是消费者如果想要及时的处理数据，就要在程序中写个类似 \"),s(\"code\",[t._v(\"while(true)\")]),t._v(\" 这样的逻辑，不停的去调用 RPOP 或 LPOP 命令，这就会给消费者程序带来些不必要的性能损失。\")]),t._v(\" \"),s(\"p\",[t._v(\"所以，Redis 还提供了 \"),s(\"code\",[t._v(\"BLPOP\")]),t._v(\"、\"),s(\"code\",[t._v(\"BRPOP\")]),t._v(\" 这种阻塞式读取的命令（带 B-Bloking的都是阻塞式），客户端在没有读到队列数据时，自动阻塞，直到有新的数据写入队列，再开始读取新数据。这种方式就节省了不必要的 CPU 开销。\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"LPUSH、BRPOP  左进右阻塞出\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"RPUSH、BLPOP  右进左阻塞出\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" lpush yourlist a b c d\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" blpop yourlist \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"yourlist\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"d\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" blpop yourlist \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"yourlist\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"c\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" blpop yourlist \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"yourlist\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"b\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" blpop yourlist \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"yourlist\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"a\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" blpop yourlist \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nil\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\".02s\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"p\",[s(\"strong\",[t._v(\"如果将超时时间设置为 0 时，即可无限等待，直到弹出消息\")])]),t._v(\" \"),s(\"p\",[t._v(\"因为 Redis 单线程的特点，所以在消费数据时，同一个消息会不会同时被多个 \"),s(\"code\",[t._v(\"consumer\")]),t._v(\" 消费掉，但是需要我们考虑消费不成功的情况。\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"可靠队列模式-ack-机制\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#可靠队列模式-ack-机制\"}},[t._v(\"#\")]),t._v(\" 可靠队列模式 | ack 机制\")]),t._v(\" \"),s(\"p\",[t._v(\"以上方式中， List 队列中的消息一经发送出去，便从队列里删除。如果由于网络原因消费者没有收到消息，或者消费者在处理这条消息的过程中崩溃了，就再也无法还原出这条消息。究其原因，就是缺少消息确认机制。\")]),t._v(\" \"),s(\"p\",[t._v(\"为了保证消息的可靠性，消息队列都会有完善的消息确认机制（Acknowledge），即消费者向队列报告消息已收到或已处理的机制。\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"Redis List 怎么搞一搞呢？\")])]),t._v(\" \"),s(\"p\",[t._v(\"再看上边的表格中，有两个命令，  \"),s(\"code\",[t._v(\"RPOPLPUSH\")]),t._v(\"、\"),s(\"code\",[t._v(\"BRPOPLPUSH\")]),t._v(\" （阻塞）从一个 list 中获取消息的同时把这条消息复制到另一个 list 里（可以当做备份），而且这个过程是原子的。\")]),t._v(\" \"),s(\"p\",[t._v(\"这样我们就可以在业务流程安全结束后，再删除队列元素，实现消息确认机制。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-c extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6379\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" rpush myqueue \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"one\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6379\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" rpush myqueue \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"two\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6379\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" rpush myqueue \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"three\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6379\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" rpoplpush myqueue queuebak\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"three\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6379\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" lrange myqueue \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"one\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"two\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6379\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" lrange queuebak \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"three\"')]),t._v(\"\\n\")])])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-rpoplpush.jpg\",alt:\"redis-rpoplpush\"}})]),t._v(\" \"),s(\"p\",[t._v(\"之前做过的项目中就有用到这样的方式去处理数据，数据标识从一个 List 取出后放入另一个 List，业务操作安全执行完成后，再去删除 List 中的数据，如果有问题的话，很好回滚。\")]),t._v(\" \"),s(\"p\",[t._v(\"当然，还有更特殊的场景，可以通过 \"),s(\"strong\",[t._v(\"zset\")]),t._v(\" 来实现\"),s(\"strong\",[t._v(\"延时消息队列\")]),t._v(\"，原理就是将消息加到 zset 结构后，将要被消费的时间戳设置为对应的 score 即可，只要业务数据不会是重复数据就 OK。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-订阅与发布实现消息队列\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-订阅与发布实现消息队列\"}},[t._v(\"#\")]),t._v(\" 2.2 订阅与发布实现消息队列\")]),t._v(\" \"),s(\"p\",[t._v(\"我们都知道消息模型有两种\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"点对点： Point-to-Point(P2P)\")]),t._v(\" \"),s(\"li\",[t._v(\"发布订阅：Publish/Subscribe(Pub/Sub)\")])]),t._v(\" \"),s(\"p\",[t._v(\"List 实现方式其实就是点对点的模式，下边我们再看下 Redis 的发布订阅模式（消息多播），这才是“根正苗红”的 Redis MQ\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-pub_sub.jpg\",alt:\"redis-pub_sub\"}})]),t._v(\" \"),s(\"p\",[t._v('\"发布/订阅\"模式同样可以实现进程间的消息传递，其原理如下:')]),t._v(\" \"),s(\"p\",[t._v('\"发布/订阅\"模式包含两种角色，分别是发布者和订阅者。订阅者可以订阅一个或者多个频道(channel)，而发布者可以向指定的频道(channel)发送消息，所有订阅此频道的订阅者都会收到此消息。')]),t._v(\" \"),s(\"p\",[t._v(\"Redis 通过 \"),s(\"code\",[t._v(\"PUBLISH\")]),t._v(\" 、 \"),s(\"code\",[t._v(\"SUBSCRIBE\")]),t._v(\" 等命令实现了订阅与发布模式， 这个功能提供两种信息机制， 分别是订阅/发布到频道和订阅/发布到模式。\")]),t._v(\" \"),s(\"p\",[t._v(\"这个 \"),s(\"strong\",[t._v(\"频道\")]),t._v(\" 和 \"),s(\"strong\",[t._v(\"模式\")]),t._v(\" 有什么区别呢？\")]),t._v(\" \"),s(\"p\",[t._v(\"频道我们可以先理解为是个 Redis 的 key 值，而模式，可以理解为是一个类似正则匹配的 Key，只是个可以匹配给定模式的频道。这样就不需要显式的去订阅多个名称了，可以通过模式订阅这种方式，一次性关注多个频道。\")]),t._v(\" \"),s(\"p\",[t._v(\"我们启动三个 Redis 客户端看下效果：\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-subscribe.jpg\",alt:\"redis-subscribe\"}})]),t._v(\" \"),s(\"p\",[t._v(\"先启动两个客户端订阅（subscribe） 名字叫 framework 的频道，然后第三个客户端往 framework 发消息，可以看到前两个客户端都会接收到对应的消息：\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-publish.jpg\",alt:\"redis-publish\"}})]),t._v(\" \"),s(\"p\",[t._v(\"我们可以看到订阅的客户端每次可以收到一个 3 个参数的消息，分别为：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"消息的种类\")]),t._v(\" \"),s(\"li\",[t._v(\"始发频道的名称\")]),t._v(\" \"),s(\"li\",[t._v(\"实际的消息\")])]),t._v(\" \"),s(\"p\",[t._v(\"再来看下订阅符合给定\"),s(\"strong\",[t._v(\"模式\")]),t._v(\"的频道，这回订阅的命令是 \"),s(\"code\",[t._v(\"PSUBSCRIBE\")])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-psubscribe.jpg\",alt:\"redis-psubscribe\"}})]),t._v(\" \"),s(\"p\",[t._v(\"我们往 \"),s(\"code\",[t._v(\"java.framework\")]),t._v(\" 这个频道发送了一条消息，不止订阅了该频道的 Consumer1 和 Consumer2 可以接收到消息，订阅了模式 \"),s(\"code\",[t._v(\"java.*\")]),t._v(\" 的 Consumer3 和 Consumer4 也可以接收到消息。\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-psubscribe-demo.jpg\",alt:\"redis-psubscribe1\"}})]),t._v(\" \"),s(\"h4\",{attrs:{id:\"pub-sub-常用命令\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pub-sub-常用命令\"}},[t._v(\"#\")]),t._v(\" Pub/Sub 常用命令：\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"命令\")]),t._v(\" \"),s(\"th\",[t._v(\"用法\")]),t._v(\" \"),s(\"th\",[t._v(\"描述\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[t._v(\"PSUBSCRIBE\")]),t._v(\" \"),s(\"td\",[t._v(\"PSUBSCRIBE pattern [pattern ...]\")]),t._v(\" \"),s(\"td\",[t._v(\"订阅一个或多个符合给定模式的频道\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"PUBSUB\")]),t._v(\" \"),s(\"td\",[t._v(\"PUBSUB subcommand [argument [argument ...]]\")]),t._v(\" \"),s(\"td\",[t._v(\"查看订阅与发布系统状态\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"PUBLISH\")]),t._v(\" \"),s(\"td\",[t._v(\"PUBLISH channel message\")]),t._v(\" \"),s(\"td\",[t._v(\"将信息发送到指定的频道\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"PUNSUBSCRIBE\")]),t._v(\" \"),s(\"td\",[t._v(\"PUNSUBSCRIBE [pattern [pattern ...]]\")]),t._v(\" \"),s(\"td\",[t._v(\"退订所有给定模式的频道\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"SUBSCRIBE\")]),t._v(\" \"),s(\"td\",[t._v(\"SUBSCRIBE channel [channel ...]\")]),t._v(\" \"),s(\"td\",[t._v(\"订阅给定的一个或多个频道的信息\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"UNSUBSCRIBE\")]),t._v(\" \"),s(\"td\",[t._v(\"UNSUBSCRIBE [channel [channel ...]]\")]),t._v(\" \"),s(\"td\",[t._v(\"指退订给定的频道\")])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-3-streams-实现消息队列\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-streams-实现消息队列\"}},[t._v(\"#\")]),t._v(\" 2.3 Streams 实现消息队列\")]),t._v(\" \"),s(\"p\",[t._v(\"Redis 发布订阅 (pub/sub) 有个缺点就是消息无法持久化，如果出现网络断开、Redis 宕机等，消息就会被丢弃。而且也没有 Ack 机制来保证数据的可靠性，假设一个消费者都没有，那消息就直接被丢弃了。\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"后来 Redis 的父亲 Antirez，又单独开启了一个叫 Disque 的项目来完善这些问题，但是没有做起来，github 的更新也定格在了 5 年前，所以我们就不讨论了。\")])]),t._v(\" \"),s(\"p\",[t._v(\"Redis 5.0 版本新增了一个更强大的数据结构——\"),s(\"strong\",[t._v(\"Stream\")]),t._v(\"。它提供了消息的持久化和主备复制功能，可以让任何客户端访问任何时刻的数据，并且能记住每一个客户端的访问位置，还能保证消息不丢失。\")]),t._v(\" \"),s(\"p\",[t._v(\"它就像是个仅追加内容的\"),s(\"strong\",[t._v(\"消息链表\")]),t._v(\"，把所有加入的消息都串起来，每个消息都有一个唯一的 ID 和对应的内容。而且消息是持久化的。\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-stream.png\",alt:\"redis-stream\"}})]),t._v(\" \"),s(\"p\",[t._v(\"每个 Stream 都有唯一的名称，它就是 Redis 的 key，在我们首次使用 xadd 指令追加消息时自动创建。\")]),t._v(\" \"),s(\"p\",[t._v(\"Streams 是 Redis 专门为消息队列设计的数据类型，所以提供了丰富的消息队列操作命令。\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"stream-常用命令\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#stream-常用命令\"}},[t._v(\"#\")]),t._v(\" Stream 常用命令\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"命令\")]),t._v(\" \"),s(\"th\",[t._v(\"描述\")]),t._v(\" \"),s(\"th\",[t._v(\"用法\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"XADD\")])]),t._v(\" \"),s(\"td\",[t._v(\"添加消息到末尾，保证有序，可以自动生成唯一ID\")]),t._v(\" \"),s(\"td\",[t._v(\"XADD key ID field value [field value ...]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XTRIM\")]),t._v(\" \"),s(\"td\",[t._v(\"对流进行修剪，限制长度\")]),t._v(\" \"),s(\"td\",[t._v(\"XTRIM key MAXLEN [~] count\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XDEL\")]),t._v(\" \"),s(\"td\",[t._v(\"删除消息\")]),t._v(\" \"),s(\"td\",[t._v(\"XDEL key ID [ID ...]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XLEN\")]),t._v(\" \"),s(\"td\",[t._v(\"获取流包含的元素数量，即消息长度\")]),t._v(\" \"),s(\"td\",[t._v(\"XLEN key\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XRANGE\")]),t._v(\" \"),s(\"td\",[t._v(\"获取消息列表，会自动过滤已经删除的消息\")]),t._v(\" \"),s(\"td\",[t._v(\"XRANGE key start end [COUNT count]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XREVRANGE\")]),t._v(\" \"),s(\"td\",[t._v(\"反向获取消息列表，ID 从大到小\")]),t._v(\" \"),s(\"td\",[t._v(\"XREVRANGE key end start [COUNT count]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"XREAD\")])]),t._v(\" \"),s(\"td\",[t._v(\"以阻塞或非阻塞方式获取消息列表\")]),t._v(\" \"),s(\"td\",[t._v(\"XREAD [COUNT count] [BLOCK milliseconds] STREAMS key [key ...] id [id ...]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"XGROUP CREATE\")])]),t._v(\" \"),s(\"td\",[t._v(\"创建消费者组\")]),t._v(\" \"),s(\"td\",[t._v(\"XGROUP [CREATE key groupname id-or-\"),s(\"mjx-container\",{staticClass:\"MathJax\",attrs:{jax:\"SVG\"}},[s(\"svg\",{staticStyle:{\"vertical-align\":\"-0.566ex\"},attrs:{xmlns:\"http://www.w3.org/2000/svg\",width:\"32.087ex\",height:\"2.262ex\",viewBox:\"0 -750 14182.4 1000\"}},[s(\"g\",{attrs:{stroke:\"currentColor\",fill:\"currentColor\",\"stroke-width\":\"0\",transform:\"matrix(1 0 0 -1 0 0)\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"math\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"mo\"}},[s(\"path\",{attrs:{\"data-c\":\"5D\",d:\"M22 710V750H159V-250H22V-210H119V710H22Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(278, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"5B\",d:\"M118 -250V750H255V710H158V-210H255V-250H118Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(556, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"53\",d:\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1169, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"45\",d:\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1907, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"54\",d:\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(2611, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"49\",d:\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3115, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"44\",d:\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3943, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6B\",d:\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4464, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4930, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"79\",d:\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5420, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"67\",d:\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5897, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6348, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6833, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"75\",d:\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7405, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"70\",d:\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7908, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6E\",d:\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(8508, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"61\",d:\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9037, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6D\",d:\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9915, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10381, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"69\",d:\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10726, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"64\",d:\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(11468.2, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12468.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12953.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(13404.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})])])])])]),t._v(\"] [DESTROY key groupname] [DELCONSUMER key groupname consumername]\")],1)]),t._v(\" \"),s(\"tr\",[s(\"td\",[s(\"strong\",[t._v(\"XREADGROUP GROUP\")])]),t._v(\" \"),s(\"td\",[t._v(\"读取消费者组中的消息\")]),t._v(\" \"),s(\"td\",[t._v(\"XREADGROUP GROUP group consumer [COUNT count] [BLOCK milliseconds] [NOACK] STREAMS key [key ...] ID [ID ...]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XACK\")]),t._v(\" \"),s(\"td\",[t._v('将消息标记为\"已处理\"')]),t._v(\" \"),s(\"td\",[t._v(\"XACK key group ID [ID ...]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XGROUP SETID\")]),t._v(\" \"),s(\"td\",[t._v(\"为消费者组设置新的最后递送消息ID\")]),t._v(\" \"),s(\"td\",[t._v(\"XGROUP SETID [CREATE key groupname id-or-\"),s(\"mjx-container\",{staticClass:\"MathJax\",attrs:{jax:\"SVG\"}},[s(\"svg\",{staticStyle:{\"vertical-align\":\"-0.566ex\"},attrs:{xmlns:\"http://www.w3.org/2000/svg\",width:\"32.087ex\",height:\"2.262ex\",viewBox:\"0 -750 14182.4 1000\"}},[s(\"g\",{attrs:{stroke:\"currentColor\",fill:\"currentColor\",\"stroke-width\":\"0\",transform:\"matrix(1 0 0 -1 0 0)\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"math\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"mo\"}},[s(\"path\",{attrs:{\"data-c\":\"5D\",d:\"M22 710V750H159V-250H22V-210H119V710H22Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(278, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"5B\",d:\"M118 -250V750H255V710H158V-210H255V-250H118Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(556, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"53\",d:\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1169, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"45\",d:\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1907, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"54\",d:\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(2611, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"49\",d:\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3115, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"44\",d:\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3943, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6B\",d:\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4464, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4930, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"79\",d:\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5420, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"67\",d:\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5897, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6348, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6833, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"75\",d:\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7405, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"70\",d:\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7908, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6E\",d:\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(8508, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"61\",d:\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9037, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6D\",d:\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9915, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10381, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"69\",d:\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10726, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"64\",d:\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(11468.2, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12468.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12953.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(13404.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})])])])])]),t._v(\"] [DESTROY key groupname]\")],1)]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XGROUP DELCONSUMER\")]),t._v(\" \"),s(\"td\",[t._v(\"删除消费者\")]),t._v(\" \"),s(\"td\",[t._v(\"XGROUP DELCONSUMER [CREATE key groupname id-or-\"),s(\"mjx-container\",{staticClass:\"MathJax\",attrs:{jax:\"SVG\"}},[s(\"svg\",{staticStyle:{\"vertical-align\":\"-0.566ex\"},attrs:{xmlns:\"http://www.w3.org/2000/svg\",width:\"32.087ex\",height:\"2.262ex\",viewBox:\"0 -750 14182.4 1000\"}},[s(\"g\",{attrs:{stroke:\"currentColor\",fill:\"currentColor\",\"stroke-width\":\"0\",transform:\"matrix(1 0 0 -1 0 0)\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"math\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"mo\"}},[s(\"path\",{attrs:{\"data-c\":\"5D\",d:\"M22 710V750H159V-250H22V-210H119V710H22Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(278, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"5B\",d:\"M118 -250V750H255V710H158V-210H255V-250H118Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(556, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"53\",d:\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1169, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"45\",d:\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1907, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"54\",d:\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(2611, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"49\",d:\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3115, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"44\",d:\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3943, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6B\",d:\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4464, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4930, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"79\",d:\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5420, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"67\",d:\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5897, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6348, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6833, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"75\",d:\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7405, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"70\",d:\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7908, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6E\",d:\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(8508, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"61\",d:\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9037, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6D\",d:\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9915, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10381, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"69\",d:\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10726, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"64\",d:\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(11468.2, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12468.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12953.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(13404.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})])])])])]),t._v(\"] [DESTROY key groupname]\")],1)]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XGROUP DESTROY\")]),t._v(\" \"),s(\"td\",[t._v(\"删除消费者组\")]),t._v(\" \"),s(\"td\",[t._v(\"XGROUP DESTROY [CREATE key groupname id-or-\"),s(\"mjx-container\",{staticClass:\"MathJax\",attrs:{jax:\"SVG\"}},[s(\"svg\",{staticStyle:{\"vertical-align\":\"-0.566ex\"},attrs:{xmlns:\"http://www.w3.org/2000/svg\",width:\"32.087ex\",height:\"2.262ex\",viewBox:\"0 -750 14182.4 1000\"}},[s(\"g\",{attrs:{stroke:\"currentColor\",fill:\"currentColor\",\"stroke-width\":\"0\",transform:\"matrix(1 0 0 -1 0 0)\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"math\"}},[s(\"g\",{attrs:{\"data-mml-node\":\"mo\"}},[s(\"path\",{attrs:{\"data-c\":\"5D\",d:\"M22 710V750H159V-250H22V-210H119V710H22Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(278, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"5B\",d:\"M118 -250V750H255V710H158V-210H255V-250H118Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(556, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"53\",d:\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1169, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"45\",d:\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(1907, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"54\",d:\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(2611, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"49\",d:\"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3115, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"44\",d:\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(3943, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6B\",d:\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4464, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(4930, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"79\",d:\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5420, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"67\",d:\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(5897, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6348, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(6833, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"75\",d:\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7405, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"70\",d:\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(7908, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6E\",d:\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(8508, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"61\",d:\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9037, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6D\",d:\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(9915, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"65\",d:\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10381, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"69\",d:\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(10726, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"64\",d:\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(11468.2, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12468.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"6F\",d:\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mi\",transform:\"translate(12953.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"72\",d:\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"}})]),s(\"g\",{attrs:{\"data-mml-node\":\"mo\",transform:\"translate(13404.4, 0)\"}},[s(\"path\",{attrs:{\"data-c\":\"2212\",d:\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"}})])])])])]),t._v(\"] [DESTROY key groupname] [DEL\")],1)]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XPENDING\")]),t._v(\" \"),s(\"td\",[t._v(\"显示待处理消息的相关信息\")]),t._v(\" \"),s(\"td\",[t._v(\"XPENDING key group [start end count] [consumer]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XCLAIM\")]),t._v(\" \"),s(\"td\",[t._v(\"转移消息的归属权\")]),t._v(\" \"),s(\"td\",[t._v(\"XCLAIM key group consumer min-idle-time ID [ID ...] [IDLE ms] [TIME ms-unix-time] [RETRYCOUNT count]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XINFO\")]),t._v(\" \"),s(\"td\",[t._v(\"查看流和消费者组的相关信息\")]),t._v(\" \"),s(\"td\",[t._v(\"XINFO [CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XINFO GROUPS\")]),t._v(\" \"),s(\"td\",[t._v(\"打印消费者组的信息\")]),t._v(\" \"),s(\"td\",[t._v(\"XINFO GROUPS [CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"XINFO STREAM\")]),t._v(\" \"),s(\"td\",[t._v(\"打印流信息\")]),t._v(\" \"),s(\"td\",[t._v(\"XINFO STREAM [CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]\")])])])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"crud-工程师上线\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#crud-工程师上线\"}},[t._v(\"#\")]),t._v(\" CRUD 工程师上线\")]),t._v(\" \"),s(\"h5\",{attrs:{id:\"增删改查来一波\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#增删改查来一波\"}},[t._v(\"#\")]),t._v(\" 增删改查来一波\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# * 号表示服务器自动生成 ID，后面顺序跟着一堆 key/value\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xadd mystream * f1 v1 f2 v2 f3 v3\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609404470049-0\"')]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"## 生成的消息 ID，有两部分组成，毫秒时间戳-该毫秒内产生的第1条消息\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 消息ID 必须要比上个 ID 大\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xadd mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),t._v(\" f4 v4  \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"error\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" ERR The ID specified \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" XADD is equal or smaller than the target stream \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"top\")]),t._v(\" item\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 自定义ID\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xadd mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1609404470049\")]),t._v(\"-1 f4 v4\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609404470049-1\"')]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# -表示最小值 , + 表示最大值,也可以指定最大消息ID，或最小消息ID，配合 -、+ 使用\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xrange mystream - +\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609404470049-0\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f1\"')]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v1\"')]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f2\"')]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v2\"')]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f3\"')]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v3\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609404470049-1\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f4\"')]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v4\"')]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xdel mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1609404470049\")]),t._v(\"-1\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xlen mystream\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 删除整个 stream\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" del mystream\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\")])])]),s(\"h5\",{attrs:{id:\"独立消费\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#独立消费\"}},[t._v(\"#\")]),t._v(\" 独立消费\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"xread\")]),t._v(\" 以阻塞或非阻塞方式获取消息列表，指定 \"),s(\"code\",[t._v(\"BLOCK\")]),t._v(\" 选项即表示阻塞，超时时间 0 毫秒（意味着永不超时）\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 从ID是0-0的开始读前2条\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xread count \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" streams mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"mystream\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609405178536-0\"')]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f5\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v5\"')]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609405198676-0\"')]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f1\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v1\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f2\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v2\"')]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 阻塞的从尾部读取流，开启新的客户端xadd后发现这里就读到了,block 0 表示永久阻塞\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xread block \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" streams mystream $\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"mystream\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609408791503-0\"')]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f6\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v6\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"42\")]),t._v(\".37s\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"可以看到，我并没有给流 \"),s(\"code\",[t._v(\"mystream\")]),t._v(\" 传入一个常规的 ID，而是传入了一个特殊的 ID \"),s(\"code\",[t._v(\"$\")]),t._v(\"这个特殊的 ID 意思是 \"),s(\"strong\",[t._v(\"XREAD\")]),t._v(\" 应该使用流 \"),s(\"code\",[t._v(\"mystream\")]),t._v(\" 已经存储的最大 ID 作为最后一个 ID。以便我们仅接收从我们开始监听时间以后的新消息。这在某种程度上相似于 Unix 命令\"),s(\"code\",[t._v(\"tail -f\")]),t._v(\"。\")]),t._v(\" \"),s(\"p\",[t._v(\"当然，也可以指定任意有效的 ID。\")]),t._v(\" \"),s(\"p\",[t._v(\"而且， \"),s(\"code\",[t._v(\"XREAD\")]),t._v(\" 的阻塞形式还可以同时监听多个 Strema，只需要指定多个键名即可。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-c extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".0\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\".1\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6379\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" xread block \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" streams mystream yourstream $ $\\n\")])])]),s(\"h5\",{attrs:{id:\"创建消费者组\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建消费者组\"}},[t._v(\"#\")]),t._v(\" 创建消费者组\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"xread\")]),t._v(\" 虽然可以扇形分发到 N 个客户端，然而，在某些问题中，我们想要做的不是向许多客户端提供相同的消息流，而是从同一流向许多客户端提供不同的消息子集。比如下图这样，三个消费者按轮训的方式去消费一个 Stream。\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-stream-cg.jpg\",alt:\"redis-stream-cg\"}})]),t._v(\" \"),s(\"p\",[t._v(\"Redis Stream 借鉴了很多 Kafka 的设计。\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[s(\"strong\",[t._v(\"Consumer Group\")]),t._v(\"：有了消费组的概念，每个消费组状态独立，互不影响，一个消费组可以有多个消费者\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[s(\"strong\",[t._v(\"last_delivered_id\")]),t._v(\" ：每个消费组会有个游标 last_delivered_id 在数组之上往前移动，表示当前消费组已经消费到哪条消息了\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[s(\"strong\",[t._v(\"pending_ids\")]),t._v(\" ：消费者的状态变量，作用是维护消费者的未确认的 id。 pending_ids 记录了当前已经被客户端读取的消息，但是还没有 ack。如果客户端没有 ack，这个变量里面的消息 ID 会越来越多，一旦某个消息被 ack，它就开始减少。这个 pending_ids 变量在 Redis 官方被称之为 \"),s(\"code\",[t._v(\"PEL\")]),t._v(\"，也就是 \"),s(\"code\",[t._v(\"Pending Entries List\")]),t._v(\"，这是一个很核心的数据结构，它用来确保客户端至少消费了消息一次，而不会在网络传输的中途丢失了没处理。\")])])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-group-strucure.png\",alt:\"redis-group-strucure\"}})]),t._v(\" \"),s(\"p\",[t._v(\"Stream 不像 Kafak 那样有分区的概念，如果想实现类似分区的功能，就要在客户端使用一定的策略将消息写到不同的 Stream。\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"xgroup create\")]),t._v(\"：创建消费者组\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"xgreadgroup\")]),t._v(\"：读取消费组中的消息\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"xack\")]),t._v(\"：ack 掉指定消息\")])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/redis/redis-xgroup.jpg\",alt:\"\"}})]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 创建消费者组的时候必须指定 ID, ID 为 0 表示从头开始消费，为 $ 表示只消费新的消息，也可以自己指定\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xgroup create mystream mygroup $\\nOK\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 查看流和消费者组的相关信息，可以查看流、也可以单独查看流下的某个组的信息\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xinfo stream mystream\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"length\"')]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 共 4 个消息\")]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"radix-tree-keys\"')]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"radix-tree-nodes\"')]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"7\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"last-generated-id\"')]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609408943089-0\"')]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"9\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"groups\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 一个消费组\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"11\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"first-entry\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 第一个消息\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"12\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609405178536-0\"')]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f5\"')]),t._v(\"\\n       \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v5\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"13\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"last-entry\"')]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 最后一个消息\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"14\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609408943089-0\"')]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f6\"')]),t._v(\"\\n       \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v6\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" \\n\")])])]),s(\"h5\",{attrs:{id:\"按消费组消费\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#按消费组消费\"}},[t._v(\"#\")]),t._v(\" 按消费组消费\")]),t._v(\" \"),s(\"p\",[t._v(\"Stream 提供了 \"),s(\"code\",[t._v(\"xreadgroup\")]),t._v(\" 指令可以进行消费组的组内消费，需要提供消费组名称、消费者名称和起始消息 ID。它同 \"),s(\"code\",[t._v(\"xread\")]),t._v(\" 一样，也可以阻塞等待新消息。读到新消息后，对应的消息 ID 就会进入消费者的 PEL(正在处理的消息) 结构里，客户端处理完毕后使用 \"),s(\"code\",[t._v(\"xack\")]),t._v(\" 指令通知服务器，本条消息已经处理完毕，该消息 ID 就会从 PEL 中移除。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#  消费组 mygroup1 中的 消费者 c1 从 mystream 中 消费组数据\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# > 号表示从当前消费组的 last_delivered_id 后面开始读\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 每当消费者读取一条消息，last_delivered_id 变量就会前进\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xreadgroup group mygroup1 c1 count \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" streams mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"mystream\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609727806627-0\"')]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f1\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v1\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f2\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v2\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f3\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v3\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xreadgroup group mygroup1 c1 count \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" streams mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"mystream\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609727818650-0\"')]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f4\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v4\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 已经没有消息可读了            \")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xreadgroup group mygroup1 c1 count \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" streams mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nil\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 还可以阻塞式的消费\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xreadgroup group mygroup1 c2 block \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" streams mystream \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\nµ1\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"mystream\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609728270632-0\"')]),t._v(\"\\n         \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"f5\"')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"v5\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"89\")]),t._v(\".36s\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 观察消费组信息\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xinfo \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"groups\")]),t._v(\" mystream\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"name\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"mygroup1\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"consumers\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 2个消费者\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"pending\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"   \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 共 3 条正在处理的信息还没有 ack\")]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"7\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"last-delivered-id\"')]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1609728270632-0\"')]),t._v(\"\\n   \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"127.0\")]),t._v(\".0.1:637\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"9\")]),t._v(\">\")]),t._v(\" xack mystream mygroup1 \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1609727806627\")]),t._v(\"-0  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# ack掉指定消息\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"integer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"尝鲜到此结束，就不继续深入了。\")]),t._v(\" \"),s(\"p\",[t._v(\"个人感觉，就目前来说，Stream 还是不能当做主流的 MQ 来使用的，而且使用案例也比较少，慎用。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"写在最后\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#写在最后\"}},[t._v(\"#\")]),t._v(\" 写在最后\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"当然，还有需要注意的就是，业务上避免过度复用一个 Redis。既用它做缓存、做计算，还拿它做任务队列，这样的话 Redis 会很累的。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"没有绝对好的技术、只有对业务最友好的技术，共勉\")])])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"以梦为马，越骑越傻。诗和远方，越走越慌。不忘初心是对的，但切记要出发，加油吧，程序员。\")])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img.starfish.ink/oceanus/end.jpg\",alt:\"\"}})]),t._v(\" \"),s(\"h2\",{attrs:{id:\"参考\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考\"}},[t._v(\"#\")]),t._v(\" 参考\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[s(\"a\",{attrs:{href:\"https://redisbook.readthedocs.io/en/latest/feature/pubsub.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\" 《Redis 设计与实现》\"),s(\"OutboundLink\")],1)])]),t._v(\" \"),s(\"li\",[s(\"p\",[s(\"a\",{attrs:{href:\"https://redis.io/topics/pubsub\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Redis 官网\"),s(\"OutboundLink\")],1)])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"https://segmentfault.com/a/1190000012244418\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"https://www.cnblogs.com/williamjie/p/11201654.html\")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}