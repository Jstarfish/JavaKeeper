{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{711:function(E,t,a){\"use strict\";a.r(t);var o=a(6),B=Object(o.a)({},(function(){var E=this,t=E.$createElement,a=E._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":E.$parent.slotKey}},[a(\"blockquote\",[a(\"p\",[E._v(\"https://www.cnblogs.com/huxi2b/p/9075306.html\")])]),E._v(\" \"),a(\"p\",[E._v(\"目前Kafka监控方案看似很多，然而并没有一个“大而全”的通用解决方案。各家框架也是各有千秋，以下是我了解到的一些内容：\")]),E._v(\" \"),a(\"p\",[a(\"strong\",[E._v(\"Kafka manager\")])]),E._v(\" \"),a(\"p\",[E._v(\"Github地址： https://github.com/yahoo/kafka-manager。 这款监控框架的好处在于监控内容相对丰富，既能够实现broker级常见的JMX监控(比如出入站流量监控)，也能对consumer消费进度进行监控(比如lag等)。另外用户还能在页面上直接对集群进行管理，比如分区重分配或创建topic——当然这是一把双刃剑，好在kafka manager自己提供了只读机制，允许用户禁掉这些管理功能。\")]),E._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/735367/201805/735367-20180523092531898-446027782.png\",alt:\"img\"}})]),E._v(\" \"),a(\"p\",[a(\"strong\",[E._v(\"Kafka Monitor\")])]),E._v(\" \"),a(\"p\",[E._v(\"Github地址：\"),a(\"a\",{attrs:{href:\"https://link.zhihu.com/?target=https%3A//github.com/linkedin/kafka-monitor%E3%80%82%E8%BF%99%E6%AC%BE%E7%9B%91%E6%8E%A7%E6%A1%86%E6%9E%B6%E6%9B%B4%E5%A4%9A%E7%9A%84%E6%98%AF%E5%85%B3%E6%B3%A8%E5%AF%B9Kafka%E9%9B%86%E7%BE%A4%E5%81%9A%E7%AB%AF%E5%88%B0%E7%AB%AF%E7%9A%84%E6%95%B4%E4%BD%93%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95%EF%BC%8C%E5%B9%B6%E4%BA%A7%E5%87%BA%E5%90%84%E7%A7%8D%E7%B3%BB%E7%BB%9F%E7%BA%A7%E7%9A%84%E7%9B%91%E6%8E%A7%E6%8C%87%E6%A0%87%EF%BC%8C%E6%AF%94%E5%A6%82%E7%AB%AF%E5%88%B0%E7%AB%AF%E7%9A%84%E5%BB%B6%E6%97%B6%EF%BC%8C%E6%95%B4%E4%BD%93%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1%E7%8E%87%E7%AD%89%E3%80%82%E5%AF%B9%E4%BA%8E%E6%96%B0%E6%90%AD%E5%BB%BA%E7%9A%84Kafka%E7%BA%BF%E4%B8%8A%E9%9B%86%E7%BE%A4%EF%BC%8C%E4%BD%BF%E7%94%A8Kafka\",target:\"_blank\",rel:\"noopener noreferrer\"}},[E._v(\"https://github.com/linkedin/kafka-monitor。\"),a(\"OutboundLink\")],1),E._v(\" 这款监控框架更多的是关注对Kafka集群做端到端的整体系统测试，并产出各种系统级的监控指标，比如端到端的延时，整体消息丢失率等。对于新搭建的Kafka线上集群，使用Kafka Monitor做个整体测试有助于你了解该集群整体的一些性能，但若是用于日常监控该框架便有些不便了，需要自己修改webapp/index.html中的监控指标，流程上有些不太友好。不过这款框架的优势是其主要贡献者是LinkedIn的lindong(Kafka 1.0.0版本中正式支持JBOD就是lindong开发的)，质量上应该是有保证的。\")]),E._v(\" \"),a(\"p\",[a(\"strong\",[E._v(\"Kafka Offset Monitor\")])]),E._v(\" \"),a(\"p\",[E._v(\"Github地址：https://github.com/quantifind/KafkaOffsetMonitor。 KafkaOffsetMonitor应该算比较早的监控框架了，有着很酷的UI，使用者也是很多。但其比较大的劣势是对新版本consumer和security的支持，另外该项目已经近2年未维护了，其主力开发甚至是另起炉灶，重新写了一个新的KafkaOffsetMonitor来支持新版本consumer——\"),a(\"a\",{attrs:{href:\"https://link.zhihu.com/?target=https%3A//github.com/Morningstar/kafka-offset-monitor%E3%80%82%E4%B8%8D%E8%BF%87%E7%9B%AE%E5%89%8D%E8%AF%A5%E9%A1%B9%E7%9B%AEstar%E6%95%B0%E5%BE%88%E5%B0%91%EF%BC%8C%E5%BA%94%E8%AF%A5%E6%B2%A1%E6%9C%89%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%BA%94%E7%94%A8%EF%BC%8C%E5%88%B0%E5%BA%95%E6%98%AF%E5%90%A6%E9%80%82%E7%94%A8%E4%BA%8E%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%94%A8%E6%88%B7%E8%87%AA%E8%A1%8C%E5%88%A4%E6%96%AD\",target:\"_blank\",rel:\"noopener noreferrer\"}},[E._v(\"https://github.com/Morningstar/kafka-offset-monitor。\"),a(\"OutboundLink\")],1),E._v(\"不过目前该项目star数很少，应该没有大规模应用，到底是否适用于生产环境需要用户自行判断\")]),E._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/735367/201805/735367-20180523092743727-2010095769.png\",alt:\"img\"}})]),E._v(\" \"),a(\"p\",[a(\"strong\",[E._v(\"Burrow\")])]),E._v(\" \"),a(\"p\",[E._v(\"Github地址： https://github.com/linkedin/Burrow。 Burrow是LinkedIn开源的一款专门监控consumer lag的框架。事实上，当初其开源时我对它还是期待挺高的，不过令人遗憾地是后劲不足，发展得非常缓慢，而且这款框架是用Go写的，安装时要求必须有Go运行环境，故Burrow在普及上不如其他框架。Burrow没有UI界面，只开放了很多HTTP endpoint，这对于想偷懒的运维来说更是一个减分项。总之它的功能目前十分有限，普及率和知名度都是比较低的。不过好处是该项目主要贡献者是LinkedIn团队维护Kafka集群的主要负责人，故质量上是很有保证的\")]),E._v(\" \"),a(\"p\",[a(\"strong\",[E._v(\"JMXTrans + InfluxDB + Grafana\")])]),E._v(\" \"),a(\"p\",[E._v(\"这实际上是一套监控框架的组合。有着非常非常炫酷的UI效果，极其适合向领导展示。具体搭建方法网上有很多教程，可以参考下。这里就不再赘述了。\")]),E._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/735367/201805/735367-20180523093127229-1072270939.png\",alt:\"img\"}})]),E._v(\" \"),a(\"p\",[E._v(\"总之，目前Kafka的监控并没有“放之四海而皆准”的解决方案，应该说每种框架都有自己独到的地方。用户需要结合自身监控需求选择适合的监控框架~\")])])}),[],!1,null,null,null);t.default=B.exports}}]);","extractedComments":[]}