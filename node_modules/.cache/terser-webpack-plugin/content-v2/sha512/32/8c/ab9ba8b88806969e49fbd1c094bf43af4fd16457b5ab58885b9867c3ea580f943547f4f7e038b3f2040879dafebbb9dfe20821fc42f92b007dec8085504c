{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{628:function(_,v,t){\"use strict\";t.r(v);var p=t(6),s=Object(p.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":_.$parent.slotKey}},[t(\"ul\",[t(\"li\",[_._v(\"尽量避免过度设计，例如会导致极其复杂查询的schema设计，或者有很多列的表设计\")]),_._v(\" \"),t(\"li\",[_._v(\"使用小而简单的合适数据类型，除非真实数据模型中有确切的需要，否则应该尽可能的避免使用NULL值。\")]),_._v(\" \"),t(\"li\",[_._v(\"尽量使用相同的数据类型存储相似或相关的值，尤其是要在关联条件中使用的列。\")]),_._v(\" \"),t(\"li\",[_._v(\"注意可变长字符串，其在临时表和排序时可能导致悲观的按最大长度分配内存。\")]),_._v(\" \"),t(\"li\",[_._v(\"尽量使用整型定义标识列。\")]),_._v(\" \"),t(\"li\",[_._v(\"避免使用MySQL已经遗弃的特性，例如指定浮点数的精度，或者整数的显示宽度。\")]),_._v(\" \"),t(\"li\",[_._v(\"小心使用ENUM和SET。\")]),_._v(\" \"),t(\"li\",[_._v(\"最好避免使用BIT。\")])]),_._v(\" \"),t(\"h1\",{attrs:{id:\"_58到家数据库30条军规解读\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_58到家数据库30条军规解读\"}},[_._v(\"#\")]),_._v(\" 58到家数据库30条军规解读\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"军规适用场景\")]),_._v(\"：并发量大、数据量大的互联网业务\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"军规\")]),_._v(\"：介绍内容\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"解读\")]),_._v(\"：讲解原因，解读比军规更重要\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"一、基础规范\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、基础规范\"}},[_._v(\"#\")]),_._v(\" 一、基础规范\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（1）必须使用InnoDB存储引擎\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：支持事务、行级锁、并发性能更好、CPU及内存缓存页优化使得资源利用率更高\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（2）必须使用UTF8字符集\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：万国码，无需转码，无乱码风险，节省空间\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（3）数据表、数据字段必须加入中文注释\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：N年后谁tm知道这个r1,r2,r3字段是干嘛的\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（4）禁止使用存储过程、视图、触发器、Event\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：高并发大数据的互联网业务，架构设计思路是“解放数据库CPU，将计算转移到服务层”，并发量大的情况下，这些功能很可能将数据库拖死，业务逻辑放到服务层具备更好的扩展性，能够轻易实现“增机器就加性能”。数据库擅长存储与索引，CPU计算还是上移吧\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（5）禁止存储大文件或者大照片\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：为何要让数据库做它不擅长的事情？大文件和照片存储在文件系统，数据库里存URI多好\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"二、命名规范\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、命名规范\"}},[_._v(\"#\")]),_._v(\" 二、命名规范\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（6）只允许使用内网域名，而不是ip连接数据库\")])]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（7）线上环境、开发环境、测试环境数据库内网域名遵循命名规范\")])]),_._v(\" \"),t(\"p\",[_._v(\"业务名称：xxx\")]),_._v(\" \"),t(\"p\",[_._v(\"线上环境：dj.xxx.db\")]),_._v(\" \"),t(\"p\",[_._v(\"开发环境：dj.xxx.rdb\")]),_._v(\" \"),t(\"p\",[_._v(\"测试环境：dj.xxx.tdb\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"从库\")]),_._v(\"在名称后加-s标识，\"),t(\"strong\",[_._v(\"备库\")]),_._v(\"在名称后加-ss标识\")]),_._v(\" \"),t(\"p\",[_._v(\"线上从库：dj.xxx-s.db\")]),_._v(\" \"),t(\"p\",[_._v(\"线上备库：dj.xxx-sss.db\")]),_._v(\" \"),t(\"p\",[_._v(\"**（8）库名、表名、字段名：小写，下划线风格，不超过32个字符，必须见名知意，禁止拼音英文混用\")]),_._v(\" \"),t(\"p\",[_._v(\"（9）表名t_xxx，非唯一索引名idx_xxx，唯一索引名uniq_xxx**\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（10）单实例表数目必须小于500\")])]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（11）单表列数目必须小于30\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：\")]),_._v(\" \"),t(\"p\",[_._v(\"a）主键递增，数据行写入可以提高插入性能，可以避免page分裂，减少表碎片提升空间和内存的使用\")]),_._v(\" \"),t(\"p\",[_._v(\"b）主键要选择较短的数据类型， Innodb引擎普通索引都会保存主键的值，较短的数据类型可以有效的减少索引的磁盘空间，提高索引的缓存效率\")]),_._v(\" \"),t(\"p\",[_._v(\"c） 无主键的表删除，在row模式的主从架构，会导致备库夯住\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（13）禁止使用外键，如果有外键完整性约束，需要应用程序控制\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：外键会导致表与表之间耦合，update与delete操作都会涉及相关联的表，十分影响sql 的性能，甚至会造成死锁。高并发情况下容易造成数据库性能，大数据高并发业务场景数据库使用以性能优先\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"四、字段设计规范\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、字段设计规范\"}},[_._v(\"#\")]),_._v(\" 四、字段设计规范\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（14）必须把字段定义为NOT NULL并且提供默认值\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：\")]),_._v(\" \"),t(\"p\",[_._v(\"a）null的列使索引/索引统计/值比较都更加复杂，对MySQL来说更难优化\")]),_._v(\" \"),t(\"p\",[_._v(\"b）null 这种类型MySQL内部需要进行特殊处理，增加数据库处理记录的复杂性；同等条件下，表中有较多空字段的时候，数据库的处理性能会降低很多\")]),_._v(\" \"),t(\"p\",[_._v(\"c）null值需要更多的存储空，无论是表还是索引中每行中的null的列都需要额外的空间来标识\")]),_._v(\" \"),t(\"p\",[_._v(\"d）对null 的处理时候，只能采用is null或is not null，而不能采用=、in、<、<>、!=、not in这些操作符号。如：where name!=’shenjian’，如果存在name为null值的记录，查询结果就不会包含name为null值的记录\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（15）禁止使用TEXT、BLOB类型\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：会浪费更多的磁盘和内存空间，非必要的大量的大字段查询会淘汰掉热数据，导致内存命中率急剧降低，影响数据库性能\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（16）禁止使用小数存储货币\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：使用整数吧，小数容易导致钱对不上\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（17）必须使用varchar(20)存储手机号\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：\")]),_._v(\" \"),t(\"p\",[_._v(\"a）涉及到区号或者国家代号，可能出现+-()\")]),_._v(\" \"),t(\"p\",[_._v(\"b）手机号会去做数学运算么？\")]),_._v(\" \"),t(\"p\",[_._v(\"c）varchar可以支持模糊查询，例如：like“138%”\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（18）禁止使用ENUM，可使用TINYINT代替\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：\")]),_._v(\" \"),t(\"p\",[_._v(\"a）增加新的ENUM值要做DDL操作\")]),_._v(\" \"),t(\"p\",[_._v(\"b）ENUM的内部实际存储就是整数，你以为自己定义的是字符串？\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"五、索引设计规范\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五、索引设计规范\"}},[_._v(\"#\")]),_._v(\" 五、索引设计规范\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（19）单表索引建议控制在5个以内\")])]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（20）单索引字段数不允许超过5个\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：字段超过5个时，实际已经起不到有效过滤数据的作用了\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（21）禁止在更新十分频繁、区分度不高的属性上建立索引\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：\")]),_._v(\" \"),t(\"p\",[_._v(\"a）更新会变更B+树，更新频繁的字段建立索引会大大降低数据库性能\")]),_._v(\" \"),t(\"p\",[_._v(\"b）“性别”这种区分度不大的属性，建立索引是没有什么意义的，不能有效过滤数据，性能与全表扫描类似\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（22）建立组合索引，必须把区分度高的字段放在前面\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：能够更加有效的过滤数据\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"六、sql使用规范\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#六、sql使用规范\"}},[_._v(\"#\")]),_._v(\" 六、SQL使用规范\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（23）禁止使用SELECT *，只获取必要的字段，需要显示说明列属性\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：\")]),_._v(\" \"),t(\"p\",[_._v(\"a）读取不需要的列会增加CPU、IO、NET消耗\")]),_._v(\" \"),t(\"p\",[_._v(\"b）不能有效的利用覆盖索引\")]),_._v(\" \"),t(\"p\",[_._v(\"c）使用SELECT *容易在增加或者删除字段后出现程序BUG\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（24）禁止使用INSERT INTO t_xxx VALUES(xxx)，必须显示指定插入的列属性\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：容易在增加或者删除字段后出现程序BUG\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（25）禁止使用属性隐式转换\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：SELECT uid FROM t_user WHERE phone=13812345678 会导致全表扫描，而不能命中phone索引，猜猜为什么？（这个线上问题不止出现过一次）\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（26）禁止在WHERE条件的属性上使用函数或者表达式\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：SELECT uid FROM t_user WHERE from_unixtime(day)>='2017-02-15' 会导致全表扫描\")]),_._v(\" \"),t(\"p\",[_._v(\"正确的写法是：SELECT uid FROM t_user WHERE day>= unix_timestamp('2017-02-15 00:00:00')\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（27）禁止负向查询，以及%开头的模糊查询\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：\")]),_._v(\" \"),t(\"p\",[_._v(\"a）负向查询条件：NOT、!=、<>、!<、!>、NOT IN、NOT LIKE等，会导致全表扫描\")]),_._v(\" \"),t(\"p\",[_._v(\"b）%开头的模糊查询，会导致全表扫描\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（28）禁止大表使用JOIN查询，禁止大表使用子查询\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：会产生临时表，消耗较多内存与CPU，极大影响数据库性能\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（29）禁止使用OR条件，必须改为IN查询\")])]),_._v(\" \"),t(\"p\",[_._v(\"解读：旧版本Mysql的OR查询是不能命中索引的，即使能命中索引，为何要让数据库耗费更多的CPU帮助实施查询优化呢？\")]),_._v(\" \"),t(\"p\",[t(\"strong\",[_._v(\"（30）应用程序必须捕获SQL异常，并有相应处理\")])])])}),[],!1,null,null,null);v.default=s.exports}}]);","extractedComments":[]}