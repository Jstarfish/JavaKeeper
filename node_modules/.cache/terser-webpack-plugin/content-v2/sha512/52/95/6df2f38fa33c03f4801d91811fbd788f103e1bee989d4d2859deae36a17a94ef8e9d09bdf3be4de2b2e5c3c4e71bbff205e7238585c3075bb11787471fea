{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[278],{800:function(t,a,v){\"use strict\";v.r(a);var s=v(6),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[v(\"h1\",{attrs:{id:\"你的代码-味儿不对\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#你的代码-味儿不对\"}},[t._v(\"#\")]),t._v(\" 你的代码 ——— 味儿不对\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"看过《重构》的程序员，都知道 “bad smell ——坏味道”，书里列出了 22 项代码坏味道\")]),t._v(\" \"),v(\"p\",[t._v(\"其实最早时候，我很 “普信”，我写的代码，不管是命名和结构都很好，没有什么坏味道，后来项目组有 CR 之后，才发现好多问题\")])]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://tva1.sinaimg.cn/large/e6c9d24ely1h0hifxh3igj20fg0igabu.jpg\",alt:\"\"}})]),t._v(\" \"),v(\"p\",[t._v(\"“写代码”有两个维度：正确性和可维护性，不要只关注正确性。能把代码写对，是每个程序员的必备技能，但能够把代码写得更具可维护性，这是一个程序员从业余迈向职业的第一步。\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"http://www.osnews.com/images/comics/wtfm.jpg\",alt:\"http://www.osnews.com/images/comics/wtfm.jpg\"}})]),t._v(\" \"),v(\"h2\",{attrs:{id:\"起名有意义\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#起名有意义\"}},[t._v(\"#\")]),t._v(\" 起名有意义\")]),t._v(\" \"),v(\"p\",[t._v(\"先说下命名吧，其实我也知道命名要有意义，不管是项目名、模块名、包名、类名、方法名、变量名或者参数名，\")]),t._v(\" \"),v(\"p\",[t._v(\"虽然现在很少有人用 int a ,b ,c 这样的东西，但是起一个有业务含义的好名字，对英语水平要求还是挺高的\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/Jstarfish/picBed/others/%E6%88%AA%E5%B1%8F2022-03-18%20%E4%B8%8B%E5%8D%888.03.46.png\",alt:\"\"}})]),t._v(\" \"),v(\"div\",{staticClass:\"language-java extra-class\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[v(\"code\",[v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"processData\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \\n\"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),v(\"p\",[t._v(\"命名最好有业务含义，符合英语语法，我第一份工作做的都是海外产品，有对应的“词库”，很顺利成章的写代码也直接查就行了\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"\",alt:\"\"}})]),t._v(\" \"),v(\"p\",[t._v(\"那没有词库呢，我们写代码还是得查词，除了查词典，我们可以把我们想到的词去 github 搜一搜，看下别人怎么用的，https://unbug.github.io/codelf/ 可以试试这个\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"类名是一个名词，表示一个对象，而方法名则是一个动词，或者是一个动宾短语，表示一个动作\")])]),t._v(\" \"),v(\"p\",[t._v(\"这个说个我遇到的错误，Service 和 Server 用错之后被无情嘲笑\")]),t._v(\" \"),v(\"p\",[t._v(\"当然，取好名字前提是问题分解的干净合理，如果你的代码整个处理流程就 1 个方法，叫个 processData 没问题吧？ 这又属于其他范畴了（下文的代码太长）\")]),t._v(\" \"),v(\"p\",[t._v(\"有些命名，可能一个词会对应好多单词，如果是不同的人负责不同模块，有些同学会不管3721，各自用各自的命名，然后又会出现各种\")]),t._v(\" \"),v(\"p\",[t._v(\"convertUtils 进去发现这玩意就是个转换的\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"减少-ctrl-c-ctrl-v\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#减少-ctrl-c-ctrl-v\"}},[t._v(\"#\")]),t._v(\" 减少 Ctrl C + Ctrl V\")]),t._v(\" \"),v(\"p\",[t._v(\"还有就是重复代码\")]),t._v(\" \"),v(\"p\",[t._v(\"开发中，其实会有各种问题，现在的互联网，迭代周期快，当接到迭代需求的时候，最简单粗暴的办法就是找个类似的逻辑，直接 Ctrl C + Ctrl V（idea 都不需要 Ctrl S），改叭改叭，能写个单测就不错了，哪有时间去改写之前的烂代码，\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"这个我想说个题外话，互联网中我感觉感触最深的就是搜狗同学，刚被腾讯收购并入pcg epc 规范，每天就是改各种规范\")])]),t._v(\" \"),v(\"p\",[t._v(\"这个最大的问题，其实就是重复代码，我们会复制很多结构或功能相似的代码到各个业务逻辑中，而不是去想办法提炼函数\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"代码别太长\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码别太长\"}},[t._v(\"#\")]),t._v(\" 代码别太长\")]),t._v(\" \"),v(\"p\",[t._v(\"写代码其实不止是为了让程序读代码，更重要的应该是让程序员读代码，\")]),t._v(\" \"),v(\"p\",[t._v(\"所以代码别太长，其实就是想让我们看起来更方便一些，这里也说下几种\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"类行数太长\")]),t._v(\" \"),v(\"li\",[t._v(\"方法行数太长\")]),t._v(\" \"),v(\"li\",[t._v(\"参数列表太长\")]),t._v(\" \"),v(\"li\",[t._v(\"注释别啰里啰嗦\")]),t._v(\" \"),v(\"li\",[t._v(\"无用代码舍得删\")])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"类太大、方法太大、参数太长\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类太大、方法太大、参数太长\"}},[t._v(\"#\")]),t._v(\" 类太大、方法太大、参数太长\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/Jstarfish/picBed/others/%E6%88%AA%E5%B1%8F2022-03-18%20%E4%B8%8B%E5%8D%888.37.44.png\",alt:\"\"}})]),t._v(\" \"),v(\"p\",[t._v(\"多少行算长，有人说 80，有人说 100 ，还有人说要一屏幕放的下\")]),t._v(\" \"),v(\"p\",[t._v(\"写代码，如果“平铺直叙”的话，很容易写出“面条型代码”，好多逻辑都在一个大方法\")]),t._v(\" \"),v(\"p\",[t._v(\"参数太长，如果都是需要的，我们一般会合并成一个对象，如果传入的某个参数可以通过另一个参数获取到，那我们可以在方法内查询，而不是全部作为入参\")]),t._v(\" \"),v(\"h3\",{attrs:{id:\"注释内容\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#注释内容\"}},[t._v(\"#\")]),t._v(\" 注释内容\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"要明白，注释不能美化糟糕的代码\")]),t._v(\" \"),v(\"li\",[t._v(\"不要不舍得删不需要的代码，不删除的意义不就是为了下次可以更方便 Ctrl C V 吗，有版本控制会帮我们记录的，要那么一坨坨的注释代码干啥\")])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"发散式变化、霰弹式修改、依恋情结\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#发散式变化、霰弹式修改、依恋情结\"}},[t._v(\"#\")]),t._v(\" 发散式变化、霰弹式修改、依恋情结\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"如果一个类不是单一职责的，则不同的变化可能都需要修改这个类，说明存在发散式变化，应考虑将不同的变化分离开。\")]),t._v(\" \"),v(\"li\",[t._v(\"如果某个变化需要修改多个类的内容，则说明存在霰弹式修改，应考虑用「搬移函数」和「搬移字段」将这些需要修改的代码放进同一个模块，通过组合或者变换的策略将分散的代码拽到一起\")]),t._v(\" \"),v(\"li\",[t._v(\"如果函数对于某个类的兴趣高于了自己所处的类，说明存在依恋情结，应考虑将函数转移到他应有的类中。\")])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"数据泥团\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据泥团\"}},[t._v(\"#\")]),t._v(\" 数据泥团\")]),t._v(\" \"),v(\"p\",[t._v(\"有时候会发现三四个相同的字段，在多个类和函数中均出现，这时候说明有必要给这一组字段建立一个类，将其封装起来。\")]),t._v(\" \"),v(\"h3\",{attrs:{id:\"过多的-if-else-或者使用-switch\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#过多的-if-else-或者使用-switch\"}},[t._v(\"#\")]),t._v(\" 过多的 if...else 或者使用 switch\")]),t._v(\" \"),v(\"p\",[t._v(\"过多的 if...else 或者 switch ，都应该考虑用多态来替换掉。甚至有些人认为除个别情况外，代码中就不应该存在 if...else\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"圈复杂度\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#圈复杂度\"}},[t._v(\"#\")]),t._v(\" 圈复杂度\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"在软件开发中，有一个衡量代码复杂度常用的标准，叫做「圈复杂度」（Cyclomatic complexity，简称 CC），圈复杂度越高，代码越复杂，理解和维护成本就越高。\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"语句\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#语句\"}},[t._v(\"#\")]),t._v(\" 语句\")]),t._v(\" \"),v(\"p\",[t._v(\"使用嵌套 for 循环，更扯淡的是在 for 循环里加了个 update sql\")]),t._v(\" \"),v(\"p\",[t._v(\"是否else\")]),t._v(\" \"),v(\"p\",[t._v(\"是否有重复的 switch\")]),t._v(\" \"),v(\"p\",[t._v(\"变量申明后是否立即赋值\")]),t._v(\" \"),v(\"p\",[t._v(\"返回值是否可以用 Optional\")]),t._v(\" \"),v(\"p\",[t._v(\"知道自己的代码味道不对，那接着我再说说改味道的方法\")]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"可读性\")]),t._v(\" \"),v(\"p\",[t._v(\"适当的注释，方法内适当的拆分以保证方法内主流程简洁，减少多层嵌套判断，规避复杂判断条件，采用公司统一编码风格等等\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"重构的手法\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#重构的手法\"}},[t._v(\"#\")]),t._v(\" 重构的手法\")]),t._v(\" \"),v(\"p\",[t._v(\"Idea 中可以直接全局改名，提取方法（Extrat Method），我们 Javaer 现在大部分都用 Idea，这玩意很多强大的功能我们却没用到，其实好多重构可以通过 Idea 自动化\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"巧用-idea\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#巧用-idea\"}},[t._v(\"#\")]),t._v(\" 巧用 IDEA\")]),t._v(\" \"),v(\"p\",[t._v(\"介绍codeCC\")]),t._v(\" \"),v(\"p\",[t._v(\"https://cloud.tencent.com/developer/article/1371896\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"《重构》\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"https://refactoring.guru/refactoring\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"《代码整洁之道》\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"https://mp.weixin.qq.com/s/AjubL4vVhFa_FIlaopLVCA\")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);","extractedComments":[]}