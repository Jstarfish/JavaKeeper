{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{587:function(t,l,e){\"use strict\";e.r(l);var s=e(6),i=Object(s.a)({},(function(){var t=this,l=t.$createElement,e=t._self._c||l;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"p\",[t._v(\"TODO\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:\"https://img.starfish.ink/mysql/log-seq.png\",alt:\"\"}})]),t._v(\" \"),e(\"p\",[t._v(\"备库 B 跟主库 A 之间维持了一个长连接。主库 A 内部有一个线程，专门用于服务备库 B 的这个长连接。一个事务日志同步的完整过程是这样的：\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"在备库 B 上通过 change master 命令，设置主库 A 的 IP、端口、用户名、密码，以及要从哪个位置开始请求 binlog，这个位置包含文件名和日志偏移量。\")]),t._v(\" \"),e(\"li\",[t._v(\"在备库 B 上执行 start slave 命令，这时候备库会启动两个线程，就是图中的 io_thread 和 sql_thread。其中 io_thread 负责与主库建立连接。\")]),t._v(\" \"),e(\"li\",[t._v(\"主库 A 校验完用户名、密码后，开始按照备库 B 传过来的位置，从本地读取 binlog，发给 B。\")]),t._v(\" \"),e(\"li\",[t._v(\"备库 B 拿到 binlog 后，写到本地文件，称为中转日志（relay log）。\")]),t._v(\" \"),e(\"li\",[t._v(\"sql_thread 读取中转日志，解析出日志里的命令，并执行。\")])])])}),[],!1,null,null,null);l.default=i.exports}}]);","extractedComments":[]}