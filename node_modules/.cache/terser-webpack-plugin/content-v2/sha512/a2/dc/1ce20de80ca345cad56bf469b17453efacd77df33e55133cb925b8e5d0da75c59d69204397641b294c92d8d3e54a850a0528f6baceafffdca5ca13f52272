{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{748:function(a,e,t){\"use strict\";t.r(e);var s=t(6),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"你了解-java-应用开发中的注入攻击吗\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#你了解-java-应用开发中的注入攻击吗\"}},[a._v(\"#\")]),a._v(\" 你了解 Java 应用开发中的注入攻击吗？\")]),a._v(\" \"),t(\"p\",[a._v(\"注入式（Inject）攻击是一类非常常见的攻击方式，其基本特征是程序允许攻击者将不可信的动态内容注入到程序中，并将其执行，这就可能完全改变最初预计的执行过程，产生恶意效果。\")]),a._v(\" \"),t(\"p\",[a._v(\"下面是几种主要的注入式攻击途径，原则上提供动态执行能力的语言特性，都需要提防发生注入攻击的可能。\")]),a._v(\" \"),t(\"p\",[a._v(\"首先，就是最常见的 SQL 注入攻击。一个典型的场景就是 Web 系统的用户登录功能，根据用户输入的用户名和密码，我们需要去后端数据库核实信息。\")]),a._v(\" \"),t(\"p\",[a._v(\"假设应用逻辑是，后端程序利用界面输入动态生成类似下面的 SQL，然后让 JDBC 执行。\")]),a._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"Select * from use_info where username = “input_usr_name” and password = “input_pwd”\\n\")])])]),t(\"p\",[a._v(\"但是，如果我输入的 input_pwd 是类似下面的文本，\")]),a._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"“ or “”=”\\n\")])])]),t(\"p\",[a._v(\"那么，拼接出的 SQL 字符串就变成了下面的条件，OR 的存在导致输入什么名字都是复合条件的。\")]),a._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"Select * from use_info where username = “input_usr_name” and password = “” or “” = “”\\n\")])])]),t(\"p\",[a._v(\"这里只是举个简单的例子，它是利用了期望输入和可能输入之间的偏差。上面例子中，期望用户输入一个数值，但实际输入的则是 SQL 语句片段。类似场景可以利用注入的不同 SQL 语句，进行各种不同目的的攻击，甚至还可以加上“;delete xxx”之类语句，如果数据库权限控制不合理，攻击效果就可能是灾难性的。\")]),a._v(\" \"),t(\"p\",[a._v(\"第二，操作系统命令注入。Java 语言提供了类似 Runtime.exec(…) 的 API，可以用来执行特定命令，假设我们构建了一个应用，以输入文本作为参数，执行下面的命令：\")]),a._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"ls –la input_file_name\\n\")])])]),t(\"p\",[a._v(\"但是如果用户输入是 “input_file_name;rm –rf /*”，这就有可能出现问题了。当然，这只是个举例，Java 标准类库本身进行了非常多的改进，所以类似这种编程错误，未必可以真的完成攻击，但其反映的一类场景是真实存在的。\")]),a._v(\" \"),t(\"p\",[a._v(\"第三，XML 注入攻击。Java 核心类库提供了全面的 XML 处理、转换等各种 API，而 XML 自身是可以包含动态内容的，例如 XPATH，如果使用不当，可能导致访问恶意内容。\")]),a._v(\" \"),t(\"p\",[a._v(\"还有类似 LDAP 等允许动态内容的协议，都是可能利用特定命令，构造注入式攻击的，包括 XSS（Cross-site Scripting）攻击，虽然并不和 Java 直接相关，但也可能在 JSP 等动态页面中发生。\")])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}