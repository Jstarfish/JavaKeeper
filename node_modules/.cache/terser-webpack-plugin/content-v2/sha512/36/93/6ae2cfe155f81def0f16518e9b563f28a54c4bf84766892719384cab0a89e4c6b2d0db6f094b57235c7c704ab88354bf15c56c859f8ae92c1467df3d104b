{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{625:function(_,v,t){\"use strict\";t.r(v);var s=t(6),r=Object(s.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":_.$parent.slotKey}},[t(\"h2\",{attrs:{id:\"一、数据库瓶颈\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、数据库瓶颈\"}},[_._v(\"#\")]),_._v(\" 一、数据库瓶颈\")]),_._v(\" \"),t(\"p\",[_._v(\"不管是IO瓶颈，还是CPU瓶颈，最终都会导致数据库的活跃连接数增加，进而逼近甚至达到数据库可承载活跃连接数的阈值。在业务Service来看就是，可用数据库连接少甚至无连接可用。接下来就可以想象了吧（并发量、吞吐量、崩溃）。\")]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_1、io瓶颈\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、io瓶颈\"}},[_._v(\"#\")]),_._v(\" 1、IO瓶颈\")]),_._v(\" \"),t(\"p\",[_._v(\"第一种：磁盘读IO瓶颈，热点数据太多，数据库缓存放不下，每次查询时会产生大量的IO，降低查询速度 --\\x3e 分库和垂直分表。\")]),_._v(\" \"),t(\"p\",[_._v(\"第二种：网络IO瓶颈，请求的数据太多，网络带宽不够 --\\x3e 分库。\")]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_2、cpu瓶颈\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、cpu瓶颈\"}},[_._v(\"#\")]),_._v(\" 2、CPU瓶颈\")]),_._v(\" \"),t(\"p\",[_._v(\"第一种：SQL问题，如SQL中包含join，group by，order by，非索引字段条件查询等，增加CPU运算的操作 -> SQL优化，建立合适的索引，在业务Service层进行业务计算。\")]),_._v(\" \"),t(\"p\",[_._v(\"第二种：单表数据量太大，查询时扫描的行太多，SQL效率低，CPU率先出现瓶颈 --\\x3e 水平分表。\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"二、分库分表\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、分库分表\"}},[_._v(\"#\")]),_._v(\" 二、分库分表\")]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_1、水平分库\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、水平分库\"}},[_._v(\"#\")]),_._v(\" 1、水平分库\")]),_._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180806205041600-432363041.png\",alt:\"\"}})]),_._v(\" \"),t(\"ol\",[t(\"li\",[_._v(\"概念：以\"),t(\"strong\",[_._v(\"字段\")]),_._v(\"为依据，按照一定策略（hash、range等），将一个库中的数据拆分到多个库中。\")]),_._v(\" \"),t(\"li\",[_._v(\"结果：\\n\"),t(\"ul\",[t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"库\")]),_._v(\"的\"),t(\"strong\",[_._v(\"结构\")]),_._v(\"都一样；\")]),_._v(\" \"),t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"库\")]),_._v(\"的\"),t(\"strong\",[_._v(\"数据\")]),_._v(\"都不一样，没有交集；\")]),_._v(\" \"),t(\"li\",[_._v(\"所有\"),t(\"strong\",[_._v(\"库\")]),_._v(\"的\"),t(\"strong\",[_._v(\"并集\")]),_._v(\"是全量数据；\")])])]),_._v(\" \"),t(\"li\",[_._v(\"场景：系统绝对并发量上来了，分表难以根本上解决问题，并且还没有明显的业务归属来垂直分库。\")]),_._v(\" \"),t(\"li\",[_._v(\"分析：库多了，io和cpu的压力自然可以成倍缓解。\")])]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_2、水平分表\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、水平分表\"}},[_._v(\"#\")]),_._v(\" 2、水平分表\")]),_._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180806210016545-644285275.png\",alt:\"\"}})]),_._v(\" \"),t(\"ol\",[t(\"li\",[_._v(\"概念：以\"),t(\"strong\",[_._v(\"字段\")]),_._v(\"为依据，按照一定策略（hash、range等），将一个\"),t(\"strong\",[_._v(\"表\")]),_._v(\"中的数据拆分到多个\"),t(\"strong\",[_._v(\"表\")]),_._v(\"中。\")]),_._v(\" \"),t(\"li\",[_._v(\"结果：\\n\"),t(\"ul\",[t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"表\")]),_._v(\"的\"),t(\"strong\",[_._v(\"结构\")]),_._v(\"都一样；\")]),_._v(\" \"),t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"表\")]),_._v(\"的\"),t(\"strong\",[_._v(\"数据\")]),_._v(\"都不一样，没有交集；\")]),_._v(\" \"),t(\"li\",[_._v(\"所有\"),t(\"strong\",[_._v(\"表\")]),_._v(\"的\"),t(\"strong\",[_._v(\"并集\")]),_._v(\"是全量数据；\")])])]),_._v(\" \"),t(\"li\",[_._v(\"场景：系统绝对并发量并没有上来，只是单表的数据量太多，影响了SQL效率，加重了CPU负担，以至于成为瓶颈。\")]),_._v(\" \"),t(\"li\",[_._v(\"分析：表的数据量少了，单次SQL执行效率高，自然减轻了CPU的负担。\")])]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_3、垂直分库\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、垂直分库\"}},[_._v(\"#\")]),_._v(\" 3、垂直分库\")]),_._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180806211319921-1425169745.png\",alt:\"\"}})]),_._v(\" \"),t(\"ol\",[t(\"li\",[_._v(\"概念：以\"),t(\"strong\",[_._v(\"表\")]),_._v(\"为依据，按照业务归属不同，将不同的\"),t(\"strong\",[_._v(\"表\")]),_._v(\"拆分到不同的\"),t(\"strong\",[_._v(\"库\")]),_._v(\"中。\")]),_._v(\" \"),t(\"li\",[_._v(\"结果：\\n\"),t(\"ul\",[t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"库\")]),_._v(\"的\"),t(\"strong\",[_._v(\"结构\")]),_._v(\"都不一样；\")]),_._v(\" \"),t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"库\")]),_._v(\"的\"),t(\"strong\",[_._v(\"数据\")]),_._v(\"也不一样，没有交集；\")]),_._v(\" \"),t(\"li\",[_._v(\"所有\"),t(\"strong\",[_._v(\"库\")]),_._v(\"的\"),t(\"strong\",[_._v(\"并集\")]),_._v(\"是全量数据；\")])])]),_._v(\" \"),t(\"li\",[_._v(\"场景：系统绝对并发量上来了，并且可以抽象出单独的业务模块。\")]),_._v(\" \"),t(\"li\",[_._v(\"分析：到这一步，基本上就可以服务化了。例如，随着业务的发展一些公用的配置表、字典表等越来越多，这时可以将这些表拆到单独的库中，甚至可以服务化。再有，随着业务的发展孵化出了一套业务模式，这时可以将相关的表拆到单独的库中，甚至可以服务化。\")])]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_4、垂直分表\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4、垂直分表\"}},[_._v(\"#\")]),_._v(\" 4、垂直分表\")]),_._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180806212658885-2067482042.png\",alt:\"\"}})]),_._v(\" \"),t(\"ol\",[t(\"li\",[_._v(\"概念：以\"),t(\"strong\",[_._v(\"字段\")]),_._v(\"为依据，按照字段的活跃性，将\"),t(\"strong\",[_._v(\"表\")]),_._v(\"中字段拆到不同的\"),t(\"strong\",[_._v(\"表\")]),_._v(\"（主表和扩展表）中。\")]),_._v(\" \"),t(\"li\",[_._v(\"结果：\\n\"),t(\"ul\",[t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"表\")]),_._v(\"的\"),t(\"strong\",[_._v(\"结构\")]),_._v(\"都不一样；\")]),_._v(\" \"),t(\"li\",[_._v(\"每个\"),t(\"strong\",[_._v(\"表\")]),_._v(\"的\"),t(\"strong\",[_._v(\"数据\")]),_._v(\"也不一样，一般来说，每个表的\"),t(\"strong\",[_._v(\"字段\")]),_._v(\"至少有一列交集，一般是主键，用于关联数据；\")]),_._v(\" \"),t(\"li\",[_._v(\"所有\"),t(\"strong\",[_._v(\"表\")]),_._v(\"的\"),t(\"strong\",[_._v(\"并集\")]),_._v(\"是全量数据；\")])])]),_._v(\" \"),t(\"li\",[_._v(\"场景：系统绝对并发量并没有上来，表的记录并不多，但是字段多，并且热点数据和非热点数据在一起，单行数据所需的存储空间较大。以至于数据库缓存的数据行减少，查询时会去读磁盘数据产生大量的随机读IO，产生IO瓶颈。\")]),_._v(\" \"),t(\"li\",[_._v(\"分析：可以用列表页和详情页来帮助理解。垂直分表的拆分原则是将热点数据（可能会冗余经常一起查询的数据）放在一起作为主表，非热点数据放在一起作为扩展表。这样更多的热点数据就能被缓存下来，进而减少了随机读IO。拆了之后，要想获得全部数据就需要关联两个表来取数据。但记住，千万别用join，因为join不仅会增加CPU负担并且会讲两个表耦合在一起（必须在一个数据库实例上）。关联数据，应该在业务Service层做文章，分别获取主表和扩展表数据然后用关联字段关联得到全部数据。\")])]),_._v(\" \"),t(\"h3\",{attrs:{id:\"三、分库分表工具\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、分库分表工具\"}},[_._v(\"#\")]),_._v(\" 三、分库分表工具\")]),_._v(\" \"),t(\"ol\",[t(\"li\",[_._v(\"sharding-sphere：jar，前身是sharding-jdbc；\")]),_._v(\" \"),t(\"li\",[_._v(\"TDDL：jar，Taobao Distribute Data Layer；\")]),_._v(\" \"),t(\"li\",[_._v(\"Mycat：中间件。\")])]),_._v(\" \"),t(\"p\",[_._v(\"注：工具的利弊，请自行调研，官网和社区优先。\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"四、分库分表步骤\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、分库分表步骤\"}},[_._v(\"#\")]),_._v(\" 四、分库分表步骤\")]),_._v(\" \"),t(\"p\",[_._v(\"根据容量（当前容量和增长量）评估分库或分表个数 --\\x3e 选key（均匀）--\\x3e 分表规则（hash或range等）--\\x3e 执行（一般双写）--\\x3e 扩容问题（尽量减少数据的移动）。\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"五、分库分表问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五、分库分表问题\"}},[_._v(\"#\")]),_._v(\" 五、分库分表问题\")]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_1、非partition-key的查询问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、非partition-key的查询问题\"}},[_._v(\"#\")]),_._v(\" 1、非partition key的查询问题\")]),_._v(\" \"),t(\"p\",[_._v(\"基于水平分库分表，拆分策略为常用的hash法。\")]),_._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[t(\"strong\",[_._v(\"端上\")]),_._v(\"除了partition key只有一个非partition key作为条件查询\")]),_._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"strong\",[_._v(\"映射法\")]),_._v(\" \"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807105926589-1001810279.png\",alt:\"\"}})])]),_._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[_._v(\"基因法\")]),_._v(\" \"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807131414339-111952151.png\",alt:\"\"}})]),_._v(\" \"),t(\"p\",[_._v(\"注：写入时，基因法生成user_id，如图。关于xbit基因，例如要分8张表，23=8，故x取3，即3bit基因。根据user_id查询时可直接取模路由到对应的分库或分表。根据user_name查询时，先通过user_name_code生成函数生成user_name_code再对其取模路由到对应的分库或分表。id生成常用\"),t(\"strong\",[_._v(\"snowflake算法\")]),_._v(\"。\")])])])]),_._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[_._v(\"端上\")]),_._v(\"除了partition key不止一个非partition key作为条件查询\")]),_._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"strong\",[_._v(\"映射法\")]),_._v(\" \"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807110030707-42616490.png\",alt:\"img\"}})])]),_._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[_._v(\"冗余法\")]),_._v(\" \"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807171456867-464776606.png\",alt:\"\"}})]),_._v(\" \"),t(\"p\",[_._v(\"注：按照order_id或buyer_id查询时路由到db_o_buyer库中，按照seller_id查询时路由到db_o_seller库中。感觉有点本末倒置！有其他好的办法吗？改变技术栈呢？\")])])])]),_._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[_._v(\"后台\")]),_._v(\"除了partition key还有各种非partition key组合条件查询\")]),_._v(\" \"),t(\"ul\",[t(\"li\",[_._v(\"NoSQL法\\n\"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807164252157-849366697.png\",alt:\"\"}})]),_._v(\" \"),t(\"li\",[_._v(\"冗余法\\n\"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807164356760-1225281969.png\",alt:\"\"}})])])])]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_2、非partition-key跨库跨表分页查询问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、非partition-key跨库跨表分页查询问题\"}},[_._v(\"#\")]),_._v(\" 2、非partition key跨库跨表分页查询问题\")]),_._v(\" \"),t(\"p\",[_._v(\"基于水平分库分表，拆分策略为常用的hash法。\")]),_._v(\" \"),t(\"p\",[_._v(\"注：用\"),t(\"strong\",[_._v(\"NoSQL法\")]),_._v(\"解决（ES等）。\")]),_._v(\" \"),t(\"h3\",{attrs:{id:\"_3、扩容问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、扩容问题\"}},[_._v(\"#\")]),_._v(\" 3、扩容问题\")]),_._v(\" \"),t(\"p\",[_._v(\"基于水平分库分表，拆分策略为常用的hash法。\")]),_._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[_._v(\"水平扩容库（升级从库法）\\n\"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807222601104-674464032.png\",alt:\"\"}})]),_._v(\" \"),t(\"p\",[_._v(\"注：扩容是成倍的。\")])]),_._v(\" \"),t(\"li\",[t(\"p\",[_._v(\"水平扩容表（双写迁移法）\\n\"),t(\"img\",{attrs:{src:\"https://images2018.cnblogs.com/blog/955136/201808/955136-20180807230203075-707265239.png\",alt:\"img\"}}),_._v(\"\\n第一步：（同步双写）修改应用配置和代码，加上双写，部署；\\n第二步：（同步双写）将老库中的老数据复制到新库中；\\n第三步：（同步双写）以老库为准校对新库中的老数据；\\n第四步：（同步双写）修改应用配置和代码，去掉双写，部署；\")])])]),_._v(\" \"),t(\"p\",[_._v(\"注：\"),t(\"strong\",[_._v(\"双写\")]),_._v(\"是通用方案。\")]),_._v(\" \"),t(\"h2\",{attrs:{id:\"六、分库分表总结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#六、分库分表总结\"}},[_._v(\"#\")]),_._v(\" 六、分库分表总结\")]),_._v(\" \"),t(\"ol\",[t(\"li\",[_._v(\"分库分表，首先得知道瓶颈在哪里，然后才能合理地拆分（分库还是分表？水平还是垂直？分几个？）。且不可为了分库分表而拆分。\")]),_._v(\" \"),t(\"li\",[_._v(\"选key很重要，既要考虑到拆分均匀，也要考虑到非partition key的查询。\")]),_._v(\" \"),t(\"li\",[_._v(\"只要能满足需求，拆分规则越简单越好。\")])])])}),[],!1,null,null,null);v.default=r.exports}}]);","extractedComments":[]}