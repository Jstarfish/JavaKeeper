{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{716:function(t,a,s){\"use strict\";s.r(a);var e=s(6),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h2\",{attrs:{id:\"架构设计流程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#架构设计流程\"}},[t._v(\"#\")]),t._v(\" 架构设计流程\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"架构设计第-1-步-识别复杂度\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#架构设计第-1-步-识别复杂度\"}},[t._v(\"#\")]),t._v(\" 架构设计第 1 步：识别复杂度\")]),t._v(\" \"),s(\"p\",[t._v(\"架构设计的本质目的是为了解决软件系统的复杂性，所以在我们设计架构时，首先就要分析系统的复杂性。只有正确分析出了系统的复杂性，后续的架构设计方案才不会偏离方向；否则，如果对系统的复杂性判断错误，即使后续的架构设计方案再完美再先进，都是南辕北辙，做的越好，错的越多、越离谱。\")]),t._v(\" \"),s(\"p\",[t._v(\"架构的复杂度主要来源于“高性能”“高可用”“可扩展”等几个方面，但架构师在具体判断复杂性的时候，不能生搬硬套，认为任何时候架构都必须同时满足这三方面的要求。\")])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}