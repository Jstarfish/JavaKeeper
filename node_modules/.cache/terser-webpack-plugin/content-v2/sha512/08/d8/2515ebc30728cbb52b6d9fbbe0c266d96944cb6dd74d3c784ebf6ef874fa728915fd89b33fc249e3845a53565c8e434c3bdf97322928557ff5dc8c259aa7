{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{708:function(_,v,t){\"use strict\";t.r(v);var o=t(6),r=Object(o.a)({},(function(){var _=this,v=_.$createElement,o=_._self._c||v;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":_.$parent.slotKey}},[o(\"h1\",{attrs:{id:\"浅谈消息队列及常见的消息中间件\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浅谈消息队列及常见的消息中间件\"}},[_._v(\"#\")]),_._v(\" 浅谈消息队列及常见的消息中间件\")]),_._v(\" \"),o(\"blockquote\"),_._v(\" \"),o(\"h2\",{attrs:{id:\"前言\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前言\"}},[_._v(\"#\")]),_._v(\" 前言\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 已经逐渐成为企业应用系统 \"),o(\"strong\",[_._v(\"内部通信\")]),_._v(\" 的核心手段。它具有 \"),o(\"strong\",[_._v(\"低耦合\")]),_._v(\"、\"),o(\"strong\",[_._v(\"可靠投递\")]),_._v(\"、\"),o(\"strong\",[_._v(\"广播\")]),_._v(\"、\"),o(\"strong\",[_._v(\"流量控制\")]),_._v(\"、\"),o(\"strong\",[_._v(\"最终一致性\")]),_._v(\" 等一系列功能。\")]),_._v(\" \"),o(\"p\",[_._v(\"当前使用较多的 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 有 \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\"、\"),o(\"code\",[_._v(\"RocketMQ\")]),_._v(\"、\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\"、\"),o(\"code\",[_._v(\"Kafka\")]),_._v(\"、\"),o(\"code\",[_._v(\"ZeroMQ\")]),_._v(\"、\"),o(\"code\",[_._v(\"MetaMQ\")]),_._v(\" 等，而部分\"),o(\"strong\",[_._v(\"数据库\")]),_._v(\" 如 \"),o(\"code\",[_._v(\"Redis\")]),_._v(\"、\"),o(\"code\",[_._v(\"MySQL\")]),_._v(\" 以及 \"),o(\"code\",[_._v(\"phxsql\")]),_._v(\" 也可实现消息队列的功能。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/mesage-what.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h2\",{attrs:{id:\"_1-消息队列概述\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-消息队列概述\"}},[_._v(\"#\")]),_._v(\" 1. 消息队列概述\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 是指利用 \"),o(\"strong\",[_._v(\"高效可靠\")]),_._v(\" 的 \"),o(\"strong\",[_._v(\"消息传递机制\")]),_._v(\" 进行与平台无关的 \"),o(\"strong\",[_._v(\"数据交流\")]),_._v(\"，并基于\"),o(\"strong\",[_._v(\"数据通信\")]),_._v(\"来进行分布式系统的集成。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-overview.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"p\",[_._v(\"通过提供 \"),o(\"strong\",[_._v(\"消息传递\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"消息排队\")]),_._v(\" 模型，它可以在 \"),o(\"strong\",[_._v(\"分布式环境\")]),_._v(\" 下提供 \"),o(\"strong\",[_._v(\"应用解耦\")]),_._v(\"、\"),o(\"strong\",[_._v(\"弹性伸缩\")]),_._v(\"、\"),o(\"strong\",[_._v(\"冗余存储\")]),_._v(\"、\"),o(\"strong\",[_._v(\"流量削峰\")]),_._v(\"、\"),o(\"strong\",[_._v(\"异步通信\")]),_._v(\"、\"),o(\"strong\",[_._v(\"数据同步\")]),_._v(\" 等等功能，其作为 \"),o(\"strong\",[_._v(\"分布式系统架构\")]),_._v(\" 中的一个重要组件，有着举足轻重的地位。\")]),_._v(\" \"),o(\"h2\",{attrs:{id:\"_2-消息队列的特点\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-消息队列的特点\"}},[_._v(\"#\")]),_._v(\" 2. 消息队列的特点\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_2-1-采用异步处理模式\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-采用异步处理模式\"}},[_._v(\"#\")]),_._v(\" 2.1. 采用异步处理模式\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"消息发送者\")]),_._v(\" 可以发送一个消息而无须等待响应。\"),o(\"strong\",[_._v(\"消息发送者\")]),_._v(\" 将消息发送到一条 \"),o(\"strong\",[_._v(\"虚拟的通道\")]),_._v(\"（\"),o(\"strong\",[_._v(\"主题\")]),_._v(\" 或 \"),o(\"strong\",[_._v(\"队列\")]),_._v(\"）上，\"),o(\"strong\",[_._v(\"消息接收者\")]),_._v(\" 则 \"),o(\"strong\",[_._v(\"订阅\")]),_._v(\" 或是 \"),o(\"strong\",[_._v(\"监听\")]),_._v(\" 该通道。一条信息可能最终转发给 \"),o(\"strong\",[_._v(\"一个或多个\")]),_._v(\" 消息接收者，这些接收者都无需对 \"),o(\"strong\",[_._v(\"消息发送者\")]),_._v(\" 做出 \"),o(\"strong\",[_._v(\"同步回应\")]),_._v(\"。整个过程都是 \"),o(\"strong\",[_._v(\"异步的\")]),_._v(\"。\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_2-2-应用系统之间解耦合\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-应用系统之间解耦合\"}},[_._v(\"#\")]),_._v(\" 2.2. 应用系统之间解耦合\")]),_._v(\" \"),o(\"p\",[_._v(\"主要体现在如下两点：\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"发送者和接受者不必了解对方、只需要 \"),o(\"strong\",[_._v(\"确认消息\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"发送者和接受者 \"),o(\"strong\",[_._v(\"不必同时在线\")]),_._v(\"。\")])]),_._v(\" \"),o(\"p\",[_._v(\"比如在线交易系统为了保证数据的 \"),o(\"strong\",[_._v(\"最终一致\")]),_._v(\"，在 \"),o(\"strong\",[_._v(\"支付系统\")]),_._v(\" 处理完成后会把 \"),o(\"strong\",[_._v(\"支付结果\")]),_._v(\" 放到 \"),o(\"strong\",[_._v(\"消息中间件\")]),_._v(\" 里，通知 \"),o(\"strong\",[_._v(\"订单系统\")]),_._v(\" 修改 \"),o(\"strong\",[_._v(\"订单支付状态\")]),_._v(\"。两个系统是通过消息中间件解耦的。\")]),_._v(\" \"),o(\"h2\",{attrs:{id:\"_3-消息队列的传递服务模型\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-消息队列的传递服务模型\"}},[_._v(\"#\")]),_._v(\" 3. 消息队列的传递服务模型\")]),_._v(\" \"),o(\"p\",[_._v(\"消息队列的 \"),o(\"strong\",[_._v(\"传递服务模型\")]),_._v(\" 如下图所示：\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-server-mode.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h2\",{attrs:{id:\"_4-消息队列的的传输模式\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-消息队列的的传输模式\"}},[_._v(\"#\")]),_._v(\" 4. 消息队列的的传输模式\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_4-1-点对点模型\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-1-点对点模型\"}},[_._v(\"#\")]),_._v(\" 4.1. 点对点模型\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"点对点模型\")]),_._v(\" 用于 \"),o(\"strong\",[_._v(\"消息生产者\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"消息消费者\")]),_._v(\" 之间 \"),o(\"strong\",[_._v(\"点到点\")]),_._v(\" 的通信。消息生产者将消息发送到由某个名字标识的特定消费者。这个名字实际上对应消费服务中的一个 \"),o(\"strong\",[_._v(\"队列\")]),_._v(\"（\"),o(\"code\",[_._v(\"Queue\")]),_._v(\"），在消息传递给消费者之前它被 \"),o(\"strong\",[_._v(\"存储\")]),_._v(\" 在这个队列中。\"),o(\"strong\",[_._v(\"队列消息\")]),_._v(\" 可以放在 \"),o(\"strong\",[_._v(\"内存\")]),_._v(\" 中也可以 \"),o(\"strong\",[_._v(\"持久化\")]),_._v(\"，以保证在消息服务出现故障时仍然能够传递消息。\")]),_._v(\" \"),o(\"p\",[_._v(\"传统的点对点消息中间件通常由 \"),o(\"strong\",[_._v(\"消息队列服务\")]),_._v(\"、\"),o(\"strong\",[_._v(\"消息传递服务\")]),_._v(\"、\"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"消息应用程序接口\")]),_._v(\" \"),o(\"code\",[_._v(\"API\")]),_._v(\" 组成，其典型的结构如下图所示。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-queue.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"特点：\")])]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"每个消息只用一个消费者；\")]),_._v(\" \"),o(\"li\",[_._v(\"发送者和接受者没有时间依赖；\")]),_._v(\" \"),o(\"li\",[_._v(\"接受者确认消息接受和处理成功。\")])]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"示意图如下所示：\")])]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-queue-mode.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_4-2-发布-订阅模型-pub-sub\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-2-发布-订阅模型-pub-sub\"}},[_._v(\"#\")]),_._v(\" 4.2. 发布/订阅模型（Pub/Sub）\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"发布者/订阅者\")]),_._v(\" 模型支持向一个特定的 \"),o(\"strong\",[_._v(\"消息主题\")]),_._v(\" 生产消息。\"),o(\"code\",[_._v(\"0\")]),_._v(\" 或 \"),o(\"strong\",[_._v(\"多个订阅者\")]),_._v(\" 可能对接收来自 \"),o(\"strong\",[_._v(\"特定消息主题\")]),_._v(\" 的消息感兴趣。\")]),_._v(\" \"),o(\"p\",[_._v(\"在这种模型下，发布者和订阅者彼此不知道对方，就好比是匿名公告板。这种模式被概况为：多个消费者可以获得消息，在 \"),o(\"strong\",[_._v(\"发布者\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"订阅者\")]),_._v(\" 之间存在 \"),o(\"strong\",[_._v(\"时间依赖性\")]),_._v(\"。发布者需要建立一个 \"),o(\"strong\",[_._v(\"订阅\")]),_._v(\"（\"),o(\"code\",[_._v(\"subscription\")]),_._v(\"），以便能够消费者订阅。\"),o(\"strong\",[_._v(\"订阅者\")]),_._v(\" 必须保持 \"),o(\"strong\",[_._v(\"持续的活动状态\")]),_._v(\" 并 \"),o(\"strong\",[_._v(\"接收消息\")]),_._v(\"。\")]),_._v(\" \"),o(\"p\",[_._v(\"在这种情况下，在订阅者 \"),o(\"strong\",[_._v(\"未连接时\")]),_._v(\"，发布的消息将在订阅者 \"),o(\"strong\",[_._v(\"重新连接\")]),_._v(\" 时 \"),o(\"strong\",[_._v(\"重新发布\")]),_._v(\"，如下图所示：\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-pubsub-mode.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"特性：\")])]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"每个消息可以有多个订阅者；\")]),_._v(\" \"),o(\"li\",[_._v(\"客户端只有订阅后才能接收到消息；\")]),_._v(\" \"),o(\"li\",[_._v(\"持久订阅和非持久订阅。\")])]),_._v(\" \"),o(\"blockquote\",[o(\"p\",[_._v(\"注意：\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"发布者和订阅者有时间依赖：接受者和发布者只有建立订阅关系才能收到消息；\")]),_._v(\" \"),o(\"li\",[_._v(\"持久订阅：订阅关系建立后，消息就不会消失，不管订阅者是否都在线；\")]),_._v(\" \"),o(\"li\",[_._v(\"非持久订阅：订阅者为了接受消息，必须一直在线。 当只有一个订阅者时约等于点对点模式\")])])]),_._v(\" \"),o(\"h2\",{attrs:{id:\"_5-消息队列应用场景\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-消息队列应用场景\"}},[_._v(\"#\")]),_._v(\" 5. 消息队列应用场景\")]),_._v(\" \"),o(\"p\",[_._v(\"当你需要使用 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 时，首先需要考虑它的必要性。可以使用消息队列的场景有很多，最常用的几种，是做 \"),o(\"strong\",[_._v(\"应用程序松耦合\")]),_._v(\"、\"),o(\"strong\",[_._v(\"异步处理模式\")]),_._v(\"、\"),o(\"strong\",[_._v(\"发布与订阅\")]),_._v(\"、\"),o(\"strong\",[_._v(\"最终一致性\")]),_._v(\"、\"),o(\"strong\",[_._v(\"错峰流控\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"日志缓冲\")]),_._v(\" 等。反之，如果需要 \"),o(\"strong\",[_._v(\"强一致性\")]),_._v(\"，关注业务逻辑的处理结果，则使用 \"),o(\"code\",[_._v(\"RPC\")]),_._v(\" 显得更为合适。\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_5-1-异步处理\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-1-异步处理\"}},[_._v(\"#\")]),_._v(\" 5.1. 异步处理\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"非核心\")]),_._v(\" 流程 \"),o(\"strong\",[_._v(\"异步化\")]),_._v(\"，减少系统 \"),o(\"strong\",[_._v(\"响应时间\")]),_._v(\"，提高 \"),o(\"strong\",[_._v(\"吞吐量\")]),_._v(\"。例如：\"),o(\"strong\",[_._v(\"短信通知\")]),_._v(\"、\"),o(\"strong\",[_._v(\"终端状态推送\")]),_._v(\"、\"),o(\"code\",[_._v(\"App\")]),_._v(\" \"),o(\"strong\",[_._v(\"推送\")]),_._v(\"、\"),o(\"strong\",[_._v(\"用户注册\")]),_._v(\" 等。\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 一般都内置了 \"),o(\"strong\",[_._v(\"高效的通信机制\")]),_._v(\"，因此也可以用于单纯的消息通讯，比如实现 \"),o(\"strong\",[_._v(\"点对点消息队列\")]),_._v(\" 或者 \"),o(\"strong\",[_._v(\"聊天室\")]),_._v(\" 等。\")]),_._v(\" \"),o(\"h5\",{attrs:{id:\"应用案例\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#应用案例\"}},[_._v(\"#\")]),_._v(\" 应用案例\")]),_._v(\" \"),o(\"p\",[_._v(\"网站用户注册，注册成功后会过一会发送邮件确认或者短息。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-user-1.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_5-2-系统解耦\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-2-系统解耦\"}},[_._v(\"#\")]),_._v(\" 5.2. 系统解耦\")]),_._v(\" \"),o(\"ul\",[o(\"li\",[_._v(\"系统之间不是 \"),o(\"strong\",[_._v(\"强耦合的\")]),_._v(\"，\"),o(\"strong\",[_._v(\"消息接受者\")]),_._v(\" 可以随意增加，而不需要修改 \"),o(\"strong\",[_._v(\"消息发送者的代码\")]),_._v(\"。\"),o(\"strong\",[_._v(\"消息发送者\")]),_._v(\" 的成功不依赖 \"),o(\"strong\",[_._v(\"消息接受者\")]),_._v(\"（比如：有些银行接口不稳定，但调用方并不需要依赖这些接口）。\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"不强依赖\")]),_._v(\" 于非本系统的核心流程，对于 \"),o(\"strong\",[_._v(\"非核心流程\")]),_._v(\"，可以放到消息队列中让 \"),o(\"strong\",[_._v(\"消息消费者\")]),_._v(\" 去按需消费，而 \"),o(\"strong\",[_._v(\"不影响核心主流程\")]),_._v(\"。\")])]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_5-3-最终一致性\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-3-最终一致性\"}},[_._v(\"#\")]),_._v(\" 5.3. 最终一致性\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"最终一致性\")]),_._v(\" 不是 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 的必备特性，但确实可以依靠 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 来做 \"),o(\"strong\",[_._v(\"最终一致性\")]),_._v(\" 的事情。\")]),_._v(\" \"),o(\"ul\",[o(\"li\",[o(\"strong\",[_._v(\"先写消息再操作\")]),_._v(\"，确保操作完成后再修改消息状态。\"),o(\"strong\",[_._v(\"定时任务补偿机制\")]),_._v(\" 实现消息 \"),o(\"strong\",[_._v(\"可靠发送接收\")]),_._v(\"、业务操作的可靠执行，要注意 \"),o(\"strong\",[_._v(\"消息重复\")]),_._v(\" 与 \"),o(\"strong\",[_._v(\"幂等设计\")]),_._v(\"。\")]),_._v(\" \"),o(\"li\",[_._v(\"所有不保证 \"),o(\"code\",[_._v(\"100%\")]),_._v(\" \"),o(\"strong\",[_._v(\"不丢消息\")]),_._v(\" 的消息队列，理论上无法实现 \"),o(\"strong\",[_._v(\"最终一致性\")]),_._v(\"。\")])]),_._v(\" \"),o(\"blockquote\",[o(\"p\",[_._v(\"像 \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\" 一类的设计，在设计层面上就有 \"),o(\"strong\",[_._v(\"丢消息\")]),_._v(\" 的可能（比如 \"),o(\"strong\",[_._v(\"定时刷盘\")]),_._v(\"，如果掉电就会丢消息）。哪怕只丢千分之一的消息，业务也必须用其他的手段来保证结果正确。\")])]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_5-4-广播\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-4-广播\"}},[_._v(\"#\")]),_._v(\" 5.4. 广播\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"生产者/消费者\")]),_._v(\" 模式，只需要关心消息是否 \"),o(\"strong\",[_._v(\"送达队列\")]),_._v(\"，至于谁希望订阅和需要消费，是 \"),o(\"strong\",[_._v(\"下游\")]),_._v(\" 的事情，无疑极大地减少了开发和联调的工作量。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-user-2.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_5-5-流量削峰和流控\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-5-流量削峰和流控\"}},[_._v(\"#\")]),_._v(\" 5.5. 流量削峰和流控\")]),_._v(\" \"),o(\"p\",[_._v(\"当 \"),o(\"strong\",[_._v(\"上下游系统\")]),_._v(\" 处理能力存在差距的时候，利用 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 做一个通用的 \"),o(\"strong\",[_._v(\"“漏斗”\")]),_._v(\"，进行 \"),o(\"strong\",[_._v(\"限流控制\")]),_._v(\"。在下游有能力处理的时候，再进行分发。\")]),_._v(\" \"),o(\"blockquote\",[o(\"p\",[_._v(\"举个例子：用户在支付系统成功结账后，订单系统会通过短信系统向用户推送扣费通知。 \"),o(\"strong\",[_._v(\"短信系统\")]),_._v(\" 可能由于 \"),o(\"strong\",[_._v(\"短板效应\")]),_._v(\"，速度卡在 \"),o(\"strong\",[_._v(\"网关\")]),_._v(\" 上（每秒几百次请求），跟 \"),o(\"strong\",[_._v(\"前端的并发量\")]),_._v(\" 不是一个数量级。 于是，就造成 \"),o(\"strong\",[_._v(\"支付系统\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"短信系统\")]),_._v(\" 的处理能力出现差异化。\")])]),_._v(\" \"),o(\"p\",[_._v(\"然而用户晚上个半分钟左右收到短信，一般是不会有太大问题的。如果没有消息队列，两个系统之间通过 \"),o(\"strong\",[_._v(\"协商\")]),_._v(\"、\"),o(\"strong\",[_._v(\"滑动窗口\")]),_._v(\" 等复杂的方案也不是说不能实现。但 \"),o(\"strong\",[_._v(\"系统复杂性\")]),_._v(\" 指数级增长，势必在 \"),o(\"strong\",[_._v(\"上游\")]),_._v(\" 或者 \"),o(\"strong\",[_._v(\"下游\")]),_._v(\" 做 \"),o(\"strong\",[_._v(\"存储\")]),_._v(\"，并且要处理 \"),o(\"strong\",[_._v(\"定时\")]),_._v(\"、\"),o(\"strong\",[_._v(\"拥塞\")]),_._v(\" 等一系列问题。而且每当有 \"),o(\"strong\",[_._v(\"处理能力有差距\")]),_._v(\" 的时候，都需要 \"),o(\"strong\",[_._v(\"单独\")]),_._v(\" 开发一套逻辑来维护这套逻辑。\")]),_._v(\" \"),o(\"p\",[_._v(\"所以，利用中间系统转储两个系统的通信内容，并在下游系统有能力处理这些消息的时候，再处理这些消息，是一套相对较通用的方式。\")]),_._v(\" \"),o(\"h4\",{attrs:{id:\"应用案例-2\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#应用案例-2\"}},[_._v(\"#\")]),_._v(\" 应用案例\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"把消息队列当成可靠的 \"),o(\"strong\",[_._v(\"消息暂存地\")]),_._v(\"，进行一定程度的 \"),o(\"strong\",[_._v(\"消息堆积\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"定时进行消息投递，比如模拟 \"),o(\"strong\",[_._v(\"用户秒杀\")]),_._v(\" 访问，进行 \"),o(\"strong\",[_._v(\"系统性能压测\")]),_._v(\"。\")])]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-user-3.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_5-6-日志处理\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-6-日志处理\"}},[_._v(\"#\")]),_._v(\" 5.6. 日志处理\")]),_._v(\" \"),o(\"p\",[_._v(\"将消息队列用在 \"),o(\"strong\",[_._v(\"日志处理\")]),_._v(\" 中，比如 \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\" 的应用，解决 \"),o(\"strong\",[_._v(\"海量日志\")]),_._v(\" 传输和缓冲的问题。\")]),_._v(\" \"),o(\"h4\",{attrs:{id:\"应用案例-3\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#应用案例-3\"}},[_._v(\"#\")]),_._v(\" 应用案例\")]),_._v(\" \"),o(\"p\",[_._v(\"把日志进行集中收集，用于计算 \"),o(\"code\",[_._v(\"PV\")]),_._v(\"、\"),o(\"strong\",[_._v(\"用户行为分析\")]),_._v(\" 等等。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-user-4.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_5-7-消息通讯\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-7-消息通讯\"}},[_._v(\"#\")]),_._v(\" 5.7. 消息通讯\")]),_._v(\" \"),o(\"p\",[_._v(\"消息队列一般都内置了 \"),o(\"strong\",[_._v(\"高效的通信机制\")]),_._v(\"，因此也可以用于单纯的 \"),o(\"strong\",[_._v(\"消息通讯\")]),_._v(\"，比如实现 \"),o(\"strong\",[_._v(\"点对点消息队列\")]),_._v(\" 或者 \"),o(\"strong\",[_._v(\"聊天室\")]),_._v(\" 等。\")]),_._v(\" \"),o(\"h2\",{attrs:{id:\"_6-消息队列的推拉模型\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-消息队列的推拉模型\"}},[_._v(\"#\")]),_._v(\" 6. 消息队列的推拉模型\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_6-1-push推消息模型\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-1-push推消息模型\"}},[_._v(\"#\")]),_._v(\" 6.1. Push推消息模型\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"消息生产者\")]),_._v(\" 将消息发送给 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\"，\"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 又将消息推给 \"),o(\"strong\",[_._v(\"消息消费者\")]),_._v(\"。\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_6-2-pull拉消息模型\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-2-pull拉消息模型\"}},[_._v(\"#\")]),_._v(\" 6.2. Pull拉消息模型\")]),_._v(\" \"),o(\"p\",[o(\"strong\",[_._v(\"消费者\")]),_._v(\" 请求 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 接受消息，\"),o(\"strong\",[_._v(\"消息生产者\")]),_._v(\" 从 \"),o(\"strong\",[_._v(\"消息队列\")]),_._v(\" 中拉该消息。\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_6-3-两种类型的区别\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-3-两种类型的区别\"}},[_._v(\"#\")]),_._v(\" 6.3. 两种类型的区别\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-push-pull.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h2\",{attrs:{id:\"_7-消息队列技术对比\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-消息队列技术对比\"}},[_._v(\"#\")]),_._v(\" 7. 消息队列技术对比\")]),_._v(\" \"),o(\"p\",[_._v(\"本部分主要介绍四种常用的消息队列（\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" / \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" / \"),o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" / \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\"）的主要特性、优点、缺点。\")]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_7-1-activemq\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-1-activemq\"}},[_._v(\"#\")]),_._v(\" 7.1. ActiveMQ\")]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 是由 \"),o(\"code\",[_._v(\"Apache\")]),_._v(\" 出品，\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 是一个完全支持\"),o(\"code\",[_._v(\"JMS1.1\")]),_._v(\" 和 \"),o(\"code\",[_._v(\"J2EE 1.4\")]),_._v(\" 规范的 \"),o(\"code\",[_._v(\"JMS Provider\")]),_._v(\" 实现。它非常快速，支持 \"),o(\"strong\",[_._v(\"多种语言的客户端\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"协议\")]),_._v(\"，而且可以非常容易的嵌入到企业的应用环境中，并有许多高级功能。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-acaticemq.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h4\",{attrs:{id:\"a-主要特性\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#a-主要特性\"}},[_._v(\"#\")]),_._v(\" (a) 主要特性\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[o(\"strong\",[_._v(\"服从JMS规范\")]),_._v(\"：\"),o(\"code\",[_._v(\"JMS\")]),_._v(\" 规范提供了良好的标准和保证，包括：\"),o(\"strong\",[_._v(\"同步\")]),_._v(\" 或 \"),o(\"strong\",[_._v(\"异步\")]),_._v(\" 的消息分发，一次和仅一次的消息分发，\"),o(\"strong\",[_._v(\"消息接收\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"订阅\")]),_._v(\" 等等。遵从 \"),o(\"code\",[_._v(\"JMS\")]),_._v(\" 规范的好处在于，不论使用什么 \"),o(\"code\",[_._v(\"JMS\")]),_._v(\" 实现提供者，这些基础特性都是可用的；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"连接灵活性\")]),_._v(\"：\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 提供了广泛的 \"),o(\"strong\",[_._v(\"连接协议\")]),_._v(\"，支持的协议有：\"),o(\"code\",[_._v(\"HTTP/S\")]),_._v(\"，\"),o(\"code\",[_._v(\"IP\")]),_._v(\" \"),o(\"strong\",[_._v(\"多播\")]),_._v(\"，\"),o(\"code\",[_._v(\"SSL\")]),_._v(\"，\"),o(\"code\",[_._v(\"TCP\")]),_._v(\"，\"),o(\"code\",[_._v(\"UDP\")]),_._v(\" 等等。对众多协议的支持让 \"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 拥有了很好的灵活性；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"支持的协议种类多\")]),_._v(\"：\"),o(\"code\",[_._v(\"OpenWire\")]),_._v(\"、\"),o(\"code\",[_._v(\"STOMP\")]),_._v(\"、\"),o(\"code\",[_._v(\"REST\")]),_._v(\"、\"),o(\"code\",[_._v(\"XMPP\")]),_._v(\"、\"),o(\"code\",[_._v(\"AMQP\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"持久化插件和安全插件\")]),_._v(\"：\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 提供了 \"),o(\"strong\",[_._v(\"多种持久化\")]),_._v(\" 选择。而且，\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 的安全性也可以完全依据用户需求进行 \"),o(\"strong\",[_._v(\"自定义鉴权\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"授权\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"支持的客户端语言种类多\")]),_._v(\"：除了 \"),o(\"code\",[_._v(\"Java\")]),_._v(\" 之外，还有：\"),o(\"code\",[_._v(\"C/C++\")]),_._v(\"，\"),o(\"code\",[_._v(\".NET\")]),_._v(\"，\"),o(\"code\",[_._v(\"Perl\")]),_._v(\"，\"),o(\"code\",[_._v(\"PHP\")]),_._v(\"，\"),o(\"code\",[_._v(\"Python\")]),_._v(\"，\"),o(\"code\",[_._v(\"Ruby\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"代理集群\")]),_._v(\"：多个 \"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" \"),o(\"strong\",[_._v(\"代理\")]),_._v(\" 可以组成一个 \"),o(\"strong\",[_._v(\"集群\")]),_._v(\" 来提供服务；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"异常简单的管理\")]),_._v(\"：\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 是以开发者思维被设计的。所以，它并不需要专门的管理员，因为它提供了简单又使用的管理特性。有很多中方法可以 \"),o(\"strong\",[_._v(\"监控\")]),_._v(\" \"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 不同层面的数据，包括使用在 \"),o(\"code\",[_._v(\"JConsole\")]),_._v(\" 或者在 \"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 的 \"),o(\"code\",[_._v(\"Web Console\")]),_._v(\" 中使用 \"),o(\"code\",[_._v(\"JMX\")]),_._v(\"。通过处理 \"),o(\"code\",[_._v(\"JMX\")]),_._v(\" 的告警消息，通过使用 \"),o(\"strong\",[_._v(\"命令行脚本\")]),_._v(\"，甚至可以通过监控各种类型的 \"),o(\"strong\",[_._v(\"日志\")]),_._v(\"。\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"b-部署环境\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#b-部署环境\"}},[_._v(\"#\")]),_._v(\" (b) 部署环境\")]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 可以运行在 \"),o(\"code\",[_._v(\"Java\")]),_._v(\" 语言所支持的平台之上。使用 \"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 需要：\")]),_._v(\" \"),o(\"ul\",[o(\"li\",[o(\"code\",[_._v(\"Java JDK\")])]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 安装包\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"c-优点\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#c-优点\"}},[_._v(\"#\")]),_._v(\" (c) 优点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[o(\"strong\",[_._v(\"跨平台\")]),_._v(\" (\"),o(\"code\",[_._v(\"JAVA\")]),_._v(\" 编写与平台无关，\"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 几乎可以运行在任何的 \"),o(\"code\",[_._v(\"JVM\")]),_._v(\" 上)；\")]),_._v(\" \"),o(\"li\",[_._v(\"可以用 \"),o(\"code\",[_._v(\"JDBC\")]),_._v(\"：可以将 \"),o(\"strong\",[_._v(\"数据持久化\")]),_._v(\" 到数据库。虽然使用 \"),o(\"code\",[_._v(\"JDBC\")]),_._v(\" 会降低 \"),o(\"code\",[_._v(\"ActiveMQ\")]),_._v(\" 的性能，但是数据库一直都是开发人员最熟悉的存储介质；\")]),_._v(\" \"),o(\"li\",[_._v(\"支持 \"),o(\"code\",[_._v(\"JMS\")]),_._v(\" 规范：支持 \"),o(\"code\",[_._v(\"JMS\")]),_._v(\" 规范提供的 \"),o(\"strong\",[_._v(\"统一接口\")]),_._v(\";\")]),_._v(\" \"),o(\"li\",[_._v(\"支持 \"),o(\"strong\",[_._v(\"自动重连\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"错误重试机制\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"有安全机制：支持基于 \"),o(\"code\",[_._v(\"shiro\")]),_._v(\"，\"),o(\"code\",[_._v(\"jaas\")]),_._v(\" 等多种 \"),o(\"strong\",[_._v(\"安全配置机制\")]),_._v(\"，可以对 \"),o(\"code\",[_._v(\"Queue/Topic\")]),_._v(\" 进行 \"),o(\"strong\",[_._v(\"认证和授权\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"监控完善：拥有完善的 \"),o(\"strong\",[_._v(\"监控\")]),_._v(\"，包括 \"),o(\"code\",[_._v(\"Web Console\")]),_._v(\"，\"),o(\"code\",[_._v(\"JMX\")]),_._v(\"，\"),o(\"code\",[_._v(\"Shell\")]),_._v(\" 命令行，\"),o(\"code\",[_._v(\"Jolokia\")]),_._v(\" 的 \"),o(\"code\",[_._v(\"RESTful API\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"界面友善：提供的 \"),o(\"code\",[_._v(\"Web Console\")]),_._v(\" 可以满足大部分情况，还有很多 \"),o(\"strong\",[_._v(\"第三方的组件\")]),_._v(\" 可以使用，比如 \"),o(\"code\",[_._v(\"hawtio\")]),_._v(\"；\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"d-缺点\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#d-缺点\"}},[_._v(\"#\")]),_._v(\" (d) 缺点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"社区活跃度不及 \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 高；\")]),_._v(\" \"),o(\"li\",[_._v(\"根据其他用户反馈，会出莫名其妙的问题，会 \"),o(\"strong\",[_._v(\"丢失消息\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"目前重心放到 \"),o(\"code\",[_._v(\"activemq 6.0\")]),_._v(\" 产品 \"),o(\"code\",[_._v(\"Apollo\")]),_._v(\"，对 \"),o(\"code\",[_._v(\"5.x\")]),_._v(\" 的维护较少；\")]),_._v(\" \"),o(\"li\",[_._v(\"不适合用于 \"),o(\"strong\",[_._v(\"上千个队列\")]),_._v(\" 的应用场景；\")])]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_7-2-rabbitmq\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-2-rabbitmq\"}},[_._v(\"#\")]),_._v(\" 7.2. RabbitMQ\")]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 于 \"),o(\"code\",[_._v(\"2007\")]),_._v(\" 年发布，是一个在 \"),o(\"code\",[_._v(\"AMQP\")]),_._v(\" (\"),o(\"strong\",[_._v(\"高级消息队列协议\")]),_._v(\")基础上完成的，可复用的企业消息系统，是当前最主流的消息中间件之一。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-rabbitmq.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h4\",{attrs:{id:\"a-主要特性-2\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#a-主要特性-2\"}},[_._v(\"#\")]),_._v(\" (a) 主要特性\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[o(\"strong\",[_._v(\"可靠性\")]),_._v(\"：提供了多种技术可以让你在 \"),o(\"strong\",[_._v(\"性能\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"可靠性\")]),_._v(\" 之间进行 \"),o(\"strong\",[_._v(\"权衡\")]),_._v(\"。这些技术包括 \"),o(\"strong\",[_._v(\"持久性机制\")]),_._v(\"、\"),o(\"strong\",[_._v(\"投递确认\")]),_._v(\"、\"),o(\"strong\",[_._v(\"发布者证实\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"高可用性机制\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"灵活的路由\")]),_._v(\"：消息在到达队列前是通过 \"),o(\"strong\",[_._v(\"交换机\")]),_._v(\" 进行 \"),o(\"strong\",[_._v(\"路由\")]),_._v(\" 的。\"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 为典型的路由逻辑提供了 \"),o(\"strong\",[_._v(\"多种内置交换机\")]),_._v(\" 类型。如果你有更复杂的路由需求，可以将这些交换机组合起来使用，你甚至可以实现自己的交换机类型，并且当做 \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 的 \"),o(\"strong\",[_._v(\"插件\")]),_._v(\" 来使用；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"消息集群\")]),_._v(\"：在相同局域网中的多个 \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 服务器可以 \"),o(\"strong\",[_._v(\"聚合\")]),_._v(\" 在一起，作为一个独立的逻辑代理来使用；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"队列高可用\")]),_._v(\"：队列可以在集群中的机器上 \"),o(\"strong\",[_._v(\"进行镜像\")]),_._v(\"，以确保在硬件问题下还保证 \"),o(\"strong\",[_._v(\"消息安全\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"支持多种协议\")]),_._v(\"：支持 \"),o(\"strong\",[_._v(\"多种消息队列协议\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"支持多种语言\")]),_._v(\"：用 \"),o(\"code\",[_._v(\"Erlang\")]),_._v(\" 语言编写，支持只要是你能想到的 \"),o(\"strong\",[_._v(\"所有编程语言\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"管理界面\")]),_._v(\"： \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 有一个易用的 \"),o(\"strong\",[_._v(\"用户界面\")]),_._v(\"，使得用户可以 \"),o(\"strong\",[_._v(\"监控\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"管理\")]),_._v(\" 消息 \"),o(\"code\",[_._v(\"Broker\")]),_._v(\" 的许多方面；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"跟踪机制\")]),_._v(\"：如果 \"),o(\"strong\",[_._v(\"消息异常\")]),_._v(\"，\"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 提供消息跟踪机制，使用者可以找出发生了什么；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"插件机制\")]),_._v(\"：提供了许多 \"),o(\"strong\",[_._v(\"插件\")]),_._v(\"，来从多方面进行扩展，也可以编写自己的插件。\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"b-部署环境-2\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#b-部署环境-2\"}},[_._v(\"#\")]),_._v(\" (b) 部署环境\")]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 可以运行在 \"),o(\"code\",[_._v(\"Erlang\")]),_._v(\" 语言所支持的平台之上，包括 \"),o(\"code\",[_._v(\"Solaris\")]),_._v(\"，\"),o(\"code\",[_._v(\"BSD\")]),_._v(\"，\"),o(\"code\",[_._v(\"Linux\")]),_._v(\"，\"),o(\"code\",[_._v(\"MacOSX\")]),_._v(\"，\"),o(\"code\",[_._v(\"TRU64\")]),_._v(\"，\"),o(\"code\",[_._v(\"Windows\")]),_._v(\" 等。使用 \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 需要：\")]),_._v(\" \"),o(\"ul\",[o(\"li\",[o(\"code\",[_._v(\"ErLang\")]),_._v(\" 语言包\")]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 安装包\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"c-优点-2\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#c-优点-2\"}},[_._v(\"#\")]),_._v(\" (c) 优点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"由于 \"),o(\"code\",[_._v(\"Erlang\")]),_._v(\" 语言的特性，消息队列性能较好，支持 \"),o(\"strong\",[_._v(\"高并发\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"健壮、稳定、易用、\"),o(\"strong\",[_._v(\"跨平台\")]),_._v(\"、支持 \"),o(\"strong\",[_._v(\"多种语言\")]),_._v(\"、文档齐全；\")]),_._v(\" \"),o(\"li\",[_._v(\"有消息 \"),o(\"strong\",[_._v(\"确认机制\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"持久化机制\")]),_._v(\"，可靠性高；\")]),_._v(\" \"),o(\"li\",[_._v(\"高度可定制的 \"),o(\"strong\",[_._v(\"路由\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"管理界面\")]),_._v(\" 较丰富，在互联网公司也有较大规模的应用，社区活跃度高。\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"d-缺点-2\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#d-缺点-2\"}},[_._v(\"#\")]),_._v(\" (d) 缺点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"尽管结合 \"),o(\"code\",[_._v(\"Erlang\")]),_._v(\" 语言本身的并发优势，性能较好，但是不利于做 \"),o(\"strong\",[_._v(\"二次开发和维护\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"实现了 \"),o(\"strong\",[_._v(\"代理架构\")]),_._v(\"，意味着消息在发送到客户端之前可以在 \"),o(\"strong\",[_._v(\"中央节点\")]),_._v(\" 上排队。此特性使得 \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 易于使用和部署，但是使得其 \"),o(\"strong\",[_._v(\"运行速度较慢\")]),_._v(\"，因为中央节点 \"),o(\"strong\",[_._v(\"增加了延迟\")]),_._v(\"，\"),o(\"strong\",[_._v(\"消息封装后\")]),_._v(\" 也比较大；\")]),_._v(\" \"),o(\"li\",[_._v(\"需要学习 \"),o(\"strong\",[_._v(\"比较复杂\")]),_._v(\" 的 \"),o(\"strong\",[_._v(\"接口和协议\")]),_._v(\"，学习和维护成本较高。\")])]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_7-3-rocketmq\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-3-rocketmq\"}},[_._v(\"#\")]),_._v(\" 7.3. RocketMQ\")]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 出自 \"),o(\"strong\",[_._v(\"阿里\")]),_._v(\" 的开源产品，用 \"),o(\"code\",[_._v(\"Java\")]),_._v(\" 语言实现，在设计时参考了 \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\"，并做出了自己的一些改进，\"),o(\"strong\",[_._v(\"消息可靠性上\")]),_._v(\" 比 \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\" 更好。\"),o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 在阿里内部被广泛应用在 \"),o(\"strong\",[_._v(\"订单\")]),_._v(\"，\"),o(\"strong\",[_._v(\"交易\")]),_._v(\"，\"),o(\"strong\",[_._v(\"充值\")]),_._v(\"，\"),o(\"strong\",[_._v(\"流计算\")]),_._v(\"，\"),o(\"strong\",[_._v(\"消息推送\")]),_._v(\"，\"),o(\"strong\",[_._v(\"日志流式处理\")]),_._v(\"，\"),o(\"code\",[_._v(\"binglog\")]),_._v(\" \"),o(\"strong\",[_._v(\"分发\")]),_._v(\" 等场景。\")]),_._v(\" \"),o(\"h4\",{attrs:{id:\"a-主要特性-3\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#a-主要特性-3\"}},[_._v(\"#\")]),_._v(\" (a) 主要特性\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-rocketmq.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"基于 \"),o(\"strong\",[_._v(\"队列模型\")]),_._v(\"：具有 \"),o(\"strong\",[_._v(\"高性能\")]),_._v(\"、\"),o(\"strong\",[_._v(\"高可靠\")]),_._v(\"、\"),o(\"strong\",[_._v(\"高实时\")]),_._v(\"、\"),o(\"strong\",[_._v(\"分布式\")]),_._v(\" 等特点；\")]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"Producer\")]),_._v(\"、\"),o(\"code\",[_._v(\"Consumer\")]),_._v(\"、\"),o(\"strong\",[_._v(\"队列\")]),_._v(\" 都支持 \"),o(\"strong\",[_._v(\"分布式\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"Producer\")]),_._v(\" 向一些队列轮流发送消息，\"),o(\"strong\",[_._v(\"队列集合\")]),_._v(\" 称为 \"),o(\"code\",[_._v(\"Topic\")]),_._v(\"。\"),o(\"code\",[_._v(\"Consumer\")]),_._v(\" 如果做 \"),o(\"strong\",[_._v(\"广播消费\")]),_._v(\"，则一个 \"),o(\"code\",[_._v(\"Consumer\")]),_._v(\" 实例消费这个 \"),o(\"code\",[_._v(\"Topic\")]),_._v(\" 对应的 \"),o(\"strong\",[_._v(\"所有队列\")]),_._v(\"；如果做 \"),o(\"strong\",[_._v(\"集群消费\")]),_._v(\"，则 \"),o(\"strong\",[_._v(\"多个\")]),_._v(\" \"),o(\"code\",[_._v(\"Consumer\")]),_._v(\" 实例 \"),o(\"strong\",[_._v(\"平均消费\")]),_._v(\" 这个 \"),o(\"code\",[_._v(\"Topic\")]),_._v(\" 对应的队列集合；\")]),_._v(\" \"),o(\"li\",[_._v(\"能够保证 \"),o(\"strong\",[_._v(\"严格的消息顺序\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"提供丰富的 \"),o(\"strong\",[_._v(\"消息拉取模式\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"高效的订阅者 \"),o(\"strong\",[_._v(\"水平扩展\")]),_._v(\"能力；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"实时\")]),_._v(\" 的 \"),o(\"strong\",[_._v(\"消息订阅机制\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"亿级 \"),o(\"strong\",[_._v(\"消息堆积\")]),_._v(\" 能力；\")]),_._v(\" \"),o(\"li\",[_._v(\"较少的外部依赖。\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"b-部署环境-3\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#b-部署环境-3\"}},[_._v(\"#\")]),_._v(\" (b) 部署环境\")]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 可以运行在 \"),o(\"code\",[_._v(\"Java\")]),_._v(\" 语言所支持的平台之上。使用 \"),o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 需要：\")]),_._v(\" \"),o(\"ul\",[o(\"li\",[o(\"code\",[_._v(\"Java JDK\")])]),_._v(\" \"),o(\"li\",[_._v(\"安装 \"),o(\"code\",[_._v(\"git\")]),_._v(\"、\"),o(\"code\",[_._v(\"Maven\")])]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 安装包\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"c-优点-3\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#c-优点-3\"}},[_._v(\"#\")]),_._v(\" (c) 优点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[o(\"strong\",[_._v(\"单机\")]),_._v(\" 支持 \"),o(\"code\",[_._v(\"1\")]),_._v(\" 万以上 \"),o(\"strong\",[_._v(\"持久化队列\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 的所有消息都是 \"),o(\"strong\",[_._v(\"持久化的\")]),_._v(\"，先写入系统  \"),o(\"code\",[_._v(\"PAGECACHE\")]),_._v(\"，然后 \"),o(\"strong\",[_._v(\"刷盘\")]),_._v(\"，可以保证 \"),o(\"strong\",[_._v(\"内存\")]),_._v(\" 与 \"),o(\"strong\",[_._v(\"磁盘\")]),_._v(\" 都有一份数据，而 \"),o(\"strong\",[_._v(\"访问\")]),_._v(\" 时，直接 \"),o(\"strong\",[_._v(\"从内存读取\")]),_._v(\"。\")]),_._v(\" \"),o(\"li\",[_._v(\"模型简单，接口易用（\"),o(\"code\",[_._v(\"JMS\")]),_._v(\" 的接口很多场合并不太实用）；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"性能非常好\")]),_._v(\"，可以允许 \"),o(\"strong\",[_._v(\"大量堆积消息\")]),_._v(\" 在 \"),o(\"code\",[_._v(\"Broker\")]),_._v(\" 中；\")]),_._v(\" \"),o(\"li\",[_._v(\"支持 \"),o(\"strong\",[_._v(\"多种消费模式\")]),_._v(\"，包括 \"),o(\"strong\",[_._v(\"集群消费\")]),_._v(\"、\"),o(\"strong\",[_._v(\"广播消费\")]),_._v(\"等；\")]),_._v(\" \"),o(\"li\",[_._v(\"各个环节 \"),o(\"strong\",[_._v(\"分布式扩展设计\")]),_._v(\"，支持 \"),o(\"strong\",[_._v(\"主从\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"高可用\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"开发度较活跃，版本更新很快。\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"d-缺点-3\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#d-缺点-3\"}},[_._v(\"#\")]),_._v(\" (d) 缺点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[_._v(\"支持的 \"),o(\"strong\",[_._v(\"客户端语言\")]),_._v(\" 不多，目前是 \"),o(\"code\",[_._v(\"Java\")]),_._v(\" 及 \"),o(\"code\",[_._v(\"C++\")]),_._v(\"，其中 \"),o(\"code\",[_._v(\"C++\")]),_._v(\" 还不成熟；\")]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 社区关注度及成熟度也不及前两者；\")]),_._v(\" \"),o(\"li\",[_._v(\"没有 \"),o(\"code\",[_._v(\"Web\")]),_._v(\" 管理界面，提供了一个 \"),o(\"code\",[_._v(\"CLI\")]),_._v(\" (命令行界面) 管理工具带来 \"),o(\"strong\",[_._v(\"查询\")]),_._v(\"、\"),o(\"strong\",[_._v(\"管理\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"诊断各种问题\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"没有在 \"),o(\"code\",[_._v(\"MQ\")]),_._v(\" 核心里实现 \"),o(\"code\",[_._v(\"JMS\")]),_._v(\" 等接口；\")])]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_7-4-kafka\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-4-kafka\"}},[_._v(\"#\")]),_._v(\" 7.4. Kafka\")]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"Apache Kafka\")]),_._v(\" 是一个 \"),o(\"strong\",[_._v(\"分布式消息发布订阅\")]),_._v(\" 系统。它最初由 \"),o(\"code\",[_._v(\"LinkedIn\")]),_._v(\" 公司基于独特的设计实现为一个 \"),o(\"strong\",[_._v(\"分布式的日志提交系统\")]),_._v(\" (\"),o(\"code\",[_._v(\"a distributed commit log\")]),_._v(\")，之后成为 \"),o(\"code\",[_._v(\"Apache\")]),_._v(\" 项目的一部分。\"),o(\"code\",[_._v(\"Kafka\")]),_._v(\" \"),o(\"strong\",[_._v(\"性能高效\")]),_._v(\"、\"),o(\"strong\",[_._v(\"可扩展良好\")]),_._v(\" 并且 \"),o(\"strong\",[_._v(\"可持久化\")]),_._v(\"。它的 \"),o(\"strong\",[_._v(\"分区特性\")]),_._v(\"，\"),o(\"strong\",[_._v(\"可复制\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"可容错\")]),_._v(\" 都是其不错的特性。\")]),_._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:t(!function(){var _=new Error(\"Cannot find module '../../_images/message-queue/message-kafka.png'\");throw _.code=\"MODULE_NOT_FOUND\",_}()),alt:\"img\"}})]),_._v(\" \"),o(\"h4\",{attrs:{id:\"a-主要特性-4\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#a-主要特性-4\"}},[_._v(\"#\")]),_._v(\" (a) 主要特性\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[o(\"strong\",[_._v(\"快速持久化\")]),_._v(\"：可以在 \"),o(\"code\",[_._v(\"O(1)\")]),_._v(\" 的系统开销下进行 \"),o(\"strong\",[_._v(\"消息持久化\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"高吞吐\")]),_._v(\"：在一台普通的服务器上既可以达到 \"),o(\"code\",[_._v(\"10W/s\")]),_._v(\" 的 \"),o(\"strong\",[_._v(\"吞吐速率\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"完全的分布式系统\")]),_._v(\"：\"),o(\"code\",[_._v(\"Broker\")]),_._v(\"、\"),o(\"code\",[_._v(\"Producer\")]),_._v(\" 和 \"),o(\"code\",[_._v(\"Consumer\")]),_._v(\" 都原生自动支持 \"),o(\"strong\",[_._v(\"分布式\")]),_._v(\"，自动实现 \"),o(\"strong\",[_._v(\"负载均衡\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"支持 \"),o(\"strong\",[_._v(\"同步\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"异步\")]),_._v(\" 复制两种 \"),o(\"strong\",[_._v(\"高可用机制\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"支持 \"),o(\"strong\",[_._v(\"数据批量发送\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"拉取\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"零拷贝技术(zero-copy)\")]),_._v(\"：减少 \"),o(\"code\",[_._v(\"IO\")]),_._v(\" 操作步骤，提高 \"),o(\"strong\",[_._v(\"系统吞吐量\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"数据迁移\")]),_._v(\"、\"),o(\"strong\",[_._v(\"扩容\")]),_._v(\" 对用户透明；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"无需停机\")]),_._v(\" 即可扩展机器；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"其他特性\")]),_._v(\"：丰富的 \"),o(\"strong\",[_._v(\"消息拉取模型\")]),_._v(\"、高效 \"),o(\"strong\",[_._v(\"订阅者水平扩展\")]),_._v(\"、实时的 \"),o(\"strong\",[_._v(\"消息订阅\")]),_._v(\"、亿级的 \"),o(\"strong\",[_._v(\"消息堆积能力\")]),_._v(\"、定期删除机制；\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"b-部署环境-4\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#b-部署环境-4\"}},[_._v(\"#\")]),_._v(\" (b) 部署环境\")]),_._v(\" \"),o(\"p\",[_._v(\"使用 \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\" 需要：\")]),_._v(\" \"),o(\"ul\",[o(\"li\",[o(\"code\",[_._v(\"Java JDK\")])]),_._v(\" \"),o(\"li\",[o(\"code\",[_._v(\"Kafka\")]),_._v(\" 安装包\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"c-优点-4\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#c-优点-4\"}},[_._v(\"#\")]),_._v(\" (c) 优点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[o(\"strong\",[_._v(\"客户端语言丰富\")]),_._v(\"：支持 \"),o(\"code\",[_._v(\"Java\")]),_._v(\"、\"),o(\"code\",[_._v(\".Net\")]),_._v(\"、\"),o(\"code\",[_._v(\"PHP\")]),_._v(\"、\"),o(\"code\",[_._v(\"Ruby\")]),_._v(\"、\"),o(\"code\",[_._v(\"Python\")]),_._v(\"、\"),o(\"code\",[_._v(\"Go\")]),_._v(\" 等多种语言；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"高性能\")]),_._v(\"：单机写入 \"),o(\"code\",[_._v(\"TPS\")]),_._v(\" 约在 \"),o(\"code\",[_._v(\"100\")]),_._v(\" 万条/秒，消息大小 \"),o(\"code\",[_._v(\"10\")]),_._v(\" 个字节；\")]),_._v(\" \"),o(\"li\",[_._v(\"提供 \"),o(\"strong\",[_._v(\"完全分布式架构\")]),_._v(\"，并有 \"),o(\"code\",[_._v(\"replica\")]),_._v(\" 机制，拥有较高的 \"),o(\"strong\",[_._v(\"可用性\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"可靠性\")]),_._v(\"，理论上支持 \"),o(\"strong\",[_._v(\"消息无限堆积\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"支持批量操作；\")]),_._v(\" \"),o(\"li\",[o(\"strong\",[_._v(\"消费者\")]),_._v(\" 采用 \"),o(\"code\",[_._v(\"Pull\")]),_._v(\" 方式获取消息。\"),o(\"strong\",[_._v(\"消息有序\")]),_._v(\"，\"),o(\"strong\",[_._v(\"通过控制\")]),_._v(\" 能够保证所有消息被消费且仅被消费 \"),o(\"strong\",[_._v(\"一次\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"有优秀的第三方 \"),o(\"code\",[_._v(\"Kafka Web\")]),_._v(\" 管理界面 \"),o(\"code\",[_._v(\"Kafka-Manager\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"在 \"),o(\"strong\",[_._v(\"日志领域\")]),_._v(\" 比较成熟，被多家公司和多个开源项目使用。\")])]),_._v(\" \"),o(\"h4\",{attrs:{id:\"d-缺点-4\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#d-缺点-4\"}},[_._v(\"#\")]),_._v(\" (d) 缺点\")]),_._v(\" \"),o(\"ol\",[o(\"li\",[o(\"code\",[_._v(\"Kafka\")]),_._v(\" 单机超过 \"),o(\"code\",[_._v(\"64\")]),_._v(\" 个 \"),o(\"strong\",[_._v(\"队列/分区\")]),_._v(\" 时，\"),o(\"code\",[_._v(\"Load\")]),_._v(\" 时会发生明显的飙高现象。\"),o(\"strong\",[_._v(\"队列\")]),_._v(\" 越多，\"),o(\"strong\",[_._v(\"负载\")]),_._v(\" 越高，发送消息 \"),o(\"strong\",[_._v(\"响应时间变长\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"使用 \"),o(\"strong\",[_._v(\"短轮询方式\")]),_._v(\"，\"),o(\"strong\",[_._v(\"实时性\")]),_._v(\" 取决于 \"),o(\"strong\",[_._v(\"轮询间隔时间\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"消费失败 \"),o(\"strong\",[_._v(\"不支持重试\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"支持 \"),o(\"strong\",[_._v(\"消息顺序\")]),_._v(\"，但是 \"),o(\"strong\",[_._v(\"一台代理宕机\")]),_._v(\" 后，就会产生 \"),o(\"strong\",[_._v(\"消息乱序\")]),_._v(\"；\")]),_._v(\" \"),o(\"li\",[_._v(\"社区更新较慢。\")])]),_._v(\" \"),o(\"h3\",{attrs:{id:\"_7-5-几种消息队列对比\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-5-几种消息队列对比\"}},[_._v(\"#\")]),_._v(\" 7.5. 几种消息队列对比\")]),_._v(\" \"),o(\"p\",[_._v(\"这里列举了上述四种消息队列的差异对比：\")]),_._v(\" \"),o(\"table\",[o(\"thead\",[o(\"tr\",[o(\"th\"),_._v(\" \"),o(\"th\",[_._v(\"RabbitMQ\")]),_._v(\" \"),o(\"th\",[_._v(\"ActiveMQ\")]),_._v(\" \"),o(\"th\",[_._v(\"RocketMQ\")]),_._v(\" \"),o(\"th\",[_._v(\"Kafka\")])])]),_._v(\" \"),o(\"tbody\",[o(\"tr\",[o(\"td\",[_._v(\"所属社区/公司\")]),_._v(\" \"),o(\"td\",[_._v(\"Rabbit\")]),_._v(\" \"),o(\"td\",[_._v(\"Apache\")]),_._v(\" \"),o(\"td\",[_._v(\"Ali\")]),_._v(\" \"),o(\"td\",[_._v(\"Apache\")])]),_._v(\" \"),o(\"tr\",[o(\"td\",[_._v(\"开发语言\")]),_._v(\" \"),o(\"td\",[_._v(\"Erlang\")]),_._v(\" \"),o(\"td\",[_._v(\"Java\")]),_._v(\" \"),o(\"td\",[_._v(\"Java\")]),_._v(\" \"),o(\"td\",[_._v(\"Scala&Java\")])]),_._v(\" \"),o(\"tr\",[o(\"td\",[_._v(\"多语言支持\")]),_._v(\" \"),o(\"td\",[_._v(\"语言无关\")]),_._v(\" \"),o(\"td\",[_._v(\"支持，Java优先\")]),_._v(\" \"),o(\"td\",[_._v(\"Java\")]),_._v(\" \"),o(\"td\",[_._v(\"支持，Java优先\")])]),_._v(\" \"),o(\"tr\",[o(\"td\",[_._v(\"消息推拉模式\")]),_._v(\" \"),o(\"td\",[_._v(\"多协议，Pull/Push均支持\")]),_._v(\" \"),o(\"td\",[_._v(\"多协议，Pull/Push均支持\")]),_._v(\" \"),o(\"td\",[_._v(\"多协议，Pull/Push均支持\")]),_._v(\" \"),o(\"td\",[_._v(\"Pull\")])]),_._v(\" \"),o(\"tr\",[o(\"td\",[_._v(\"HA\")]),_._v(\" \"),o(\"td\",[_._v(\"master/slave模式，master提供服务，slave仅作备份\")]),_._v(\" \"),o(\"td\",[_._v(\"基于zookeeper+levelDB的master-slave实现方式\")]),_._v(\" \"),o(\"td\",[_._v(\"支持多master模式、多master多slave模式、异步复制模式、\")]),_._v(\" \"),o(\"td\",[_._v(\"支持replica机制。leader宕掉后，备份自动顶替，并重选leader\")])]),_._v(\" \"),o(\"tr\",[o(\"td\",[_._v(\"事务\")]),_._v(\" \"),o(\"td\",[_._v(\"不支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"不支持，可通过Low Level API保证仅消费一次\")])]),_._v(\" \"),o(\"tr\",[o(\"td\",[_._v(\"集群\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")])]),_._v(\" \"),o(\"tr\",[o(\"td\",[_._v(\"负载均衡\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")]),_._v(\" \"),o(\"td\",[_._v(\"支持\")])])])]),_._v(\" \"),o(\"p\",[o(\"code\",[_._v(\"Kafka\")]),_._v(\" 在于 \"),o(\"strong\",[_._v(\"分布式架构\")]),_._v(\"，\"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 基于 \"),o(\"code\",[_._v(\"AMQP\")]),_._v(\" \"),o(\"strong\",[_._v(\"协议\")]),_._v(\" 来实现，\"),o(\"code\",[_._v(\"RocketMQ\")]),_._v(\" 的思路来源于 \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\"，改成了 \"),o(\"strong\",[_._v(\"主从结构\")]),_._v(\"，在 \"),o(\"strong\",[_._v(\"事务性\")]),_._v(\" 和 \"),o(\"strong\",[_._v(\"可靠性\")]),_._v(\" 方面做了优化。广泛来说，\"),o(\"strong\",[_._v(\"电商\")]),_._v(\"、\"),o(\"strong\",[_._v(\"金融\")]),_._v(\" 等对 \"),o(\"strong\",[_._v(\"事务一致性\")]),_._v(\" 要求很高的，可以考虑 \"),o(\"code\",[_._v(\"RabbitMQ\")]),_._v(\" 和 \"),o(\"code\",[_._v(\"RocketMQ\")]),_._v(\"，对 \"),o(\"strong\",[_._v(\"性能要求高\")]),_._v(\" 的可考虑 \"),o(\"code\",[_._v(\"Kafka\")]),_._v(\"。\")]),_._v(\" \"),o(\"h2\",{attrs:{id:\"参考与感谢\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考与感谢\"}},[_._v(\"#\")]),_._v(\" 参考与感谢\")]),_._v(\" \"),o(\"p\",[_._v(\"https://juejin.im/post/5b41fe36e51d45191252e79e#heading-2\")])])}),[],!1,null,null,null);v.default=r.exports}}]);","extractedComments":[]}