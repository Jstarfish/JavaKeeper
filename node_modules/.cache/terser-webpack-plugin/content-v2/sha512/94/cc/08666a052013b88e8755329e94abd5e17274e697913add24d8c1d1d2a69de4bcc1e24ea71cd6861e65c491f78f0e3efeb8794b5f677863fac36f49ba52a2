{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{696:function(e,t,n){\"use strict\";n.r(t);var r=n(6),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"手写-spring\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#手写-spring\"}},[e._v(\"#\")]),e._v(\" 手写 Spring\")]),e._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/Jstarfish/picBed/img/20201106173132.png\",alt:\"image-20201106173130849\"}}),e._v(\"\\n配置阶段：主要是完成application.xml配置和Annotation配置。\")]),e._v(\" \"),n(\"p\",[e._v(\"初始化阶段：主要是加载并解析配置信息，然后，初始化IOC容器，完成容器的DI操作，已经完成HandlerMapping的初始化。\")]),e._v(\" \"),n(\"h1\",{attrs:{id:\"运行阶段-主要是完成spring容器启动以后-完成用户请求的内部调度-并返回响应结果。\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#运行阶段-主要是完成spring容器启动以后-完成用户请求的内部调度-并返回响应结果。\"}},[e._v(\"#\")]),e._v(\" 运行阶段：主要是完成Spring容器启动以后，完成用户请求的内部调度，并返回响应结果。\")]),e._v(\" \"),n(\"div\",{staticClass:\"language-undefined extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"   ⑴ 用户发送请求至前端控制器DispatcherServlet\\n\\n   ⑵ DispatcherServlet收到请求调用HandlerMapping处理器映射器。\\n\\n   ⑶ 处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。\\n\\n   ⑷ DispatcherServlet通过HandlerAdapter处理器适配器调用处理器\\n\\n   ⑸ 执行处理器(Controller，也叫后端控制器)。\\n\\n   ⑹ Controller执行完成返回ModelAndView\\n\\n   ⑺ HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet\\n\\n   ⑻ DispatcherServlet将ModelAndView传给ViewReslover视图解析器\\n\\n   ⑼ ViewReslover解析后返回具体View\\n\\n   ⑽ DispatcherServlet对View进行渲染视图（即将模型数据填充至视图中）。\\n\\n   ⑾ DispatcherServlet响应用户。\\n\")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}