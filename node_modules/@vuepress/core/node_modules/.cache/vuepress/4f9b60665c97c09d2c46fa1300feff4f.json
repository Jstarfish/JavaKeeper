{"remainingRequest":"/Users/starfish/oceanus/JavaKeeper/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/starfish/oceanus/JavaKeeper/node_modules/@vuepress/core/lib/client/redirect.js","dependencies":[{"path":"/Users/starfish/oceanus/JavaKeeper/node_modules/@vuepress/core/lib/client/redirect.js","mtime":1616294268000},{"path":"/Users/starfish/oceanus/JavaKeeper/node_modules/cache-loader/dist/cjs.js","mtime":1608440633000},{"path":"/Users/starfish/oceanus/JavaKeeper/node_modules/babel-loader/lib/index.js","mtime":1608440634000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwovLyBJbiBWdWVQcmVzcywgd2UgaGF2ZSBmb2xsb3dpbmcgY29udmVudGlvbiBhYm91dCByb3V0aW5nOgovLwovLyAgIC0gYC9mb28vYCBtZWFucyBzb3VyY2UgZmlsZSBpcyBgL2Zvby97UkVBRE1FfGluZGV4fS5tZGAKLy8gICAtIGAvZm9vLmh0bWxgIG1lYW5zIHlvdXIgc291cmNlIGZpbGUgaXMgYC9mb28ubWRgCi8vCi8vIFRoZSBvcmlnaW5hbCBkZXNpZ24gb2YgVnVlUHJlc3MgcmVsaWVkIG9uIGFib3ZlIHR3byBzdHlsZXMKLy8gb2Ygcm91dGluZywgZXNwZWNpYWxseSB0aGUgY2FsY3VsYXRpb24gaW52b2x2ZWQgb2Ygcm91dGVzIGF0Ci8vIGRlZmF1bHQgdGhlbWUuIHNvIHdlIGNhbid0IGVhc2lseSBtb2RpZnkgYC9mb28uaHRtbGAgZGlyZWN0bHkKLy8gdG8gYC9mb29gIChpLmUuIHJlbW92ZSBodG1sIHN1ZmZpeCkKLy8KLy8gVGhpcyAidGVtcG9yYXJ5IiB1dGlsaXR5IGhhbmRsZXMgcmVkaXJlY3Qgb2YgY2xlYW4gdXJscywgd2l0aAovLyB0aGlzIHV0aWxpdHksIHlvdSdsbCBnZXQ6Ci8vCi8vIEZvciB1bmtub3duIHJlcXVlc3QgYC9mb29gCi8vICAgLSByZWRpcmVjdCB0byBgL2Zvby5odG1sYCBpZiBpdCBleGlzdHMKLy8gICAtIHJlZGlyZWN0IHRvIGAvZm9vL2AgaWYgaXQgZXhpc3RzCi8vCi8vIEZvciB1bmtub3duIHJlcXVlc3QgYC9mb28vYAovLyAgIC0gcmVkaXJlY3QgdG8gYC9mb28uaHRtbGAgaWYgaXQgZXhpc3RzCi8vCi8vIElmIGFsbCB0aGUgYWJvdmUgcmVkaXJlY3QgcnVsZXMgZG9uJ3QgZXhpc3QsIHlvdSdsbCBnZXQgYSA0MDQKZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVJlZGlyZWN0Rm9yQ2xlYW5VcmxzKHJvdXRlcikgewogIHJvdXRlci5iZWZvcmVFYWNoKGZ1bmN0aW9uICh0bywgZnJvbSwgbmV4dCkgewogICAgaWYgKGlzUm91dGVFeGlzdHMocm91dGVyLCB0by5wYXRoKSkgewogICAgICBuZXh0KCk7CiAgICB9IGVsc2UgewogICAgICBpZiAoIS8oXC98XC5odG1sKSQvLnRlc3QodG8ucGF0aCkpIHsKICAgICAgICB2YXIgZW5kaW5nU2xhc2hVcmwgPSB0by5wYXRoICsgJy8nOwogICAgICAgIHZhciBlbmRpbmdIdG1sVXJsID0gdG8ucGF0aCArICcuaHRtbCc7CgogICAgICAgIGlmIChpc1JvdXRlRXhpc3RzKHJvdXRlciwgZW5kaW5nSHRtbFVybCkpIHsKICAgICAgICAgIG5leHQoZW5kaW5nSHRtbFVybCk7CiAgICAgICAgfSBlbHNlIGlmIChpc1JvdXRlRXhpc3RzKHJvdXRlciwgZW5kaW5nU2xhc2hVcmwpKSB7CiAgICAgICAgICBuZXh0KGVuZGluZ1NsYXNoVXJsKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbmV4dCgpOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmICgvXC8kLy50ZXN0KHRvLnBhdGgpKSB7CiAgICAgICAgdmFyIF9lbmRpbmdIdG1sVXJsID0gdG8ucGF0aC5yZXBsYWNlKC9cLyQvLCAnJykgKyAnLmh0bWwnOwoKICAgICAgICBpZiAoaXNSb3V0ZUV4aXN0cyhyb3V0ZXIsIF9lbmRpbmdIdG1sVXJsKSkgewogICAgICAgICAgbmV4dChfZW5kaW5nSHRtbFVybCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG5leHQoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbmV4dCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIGlzUm91dGVFeGlzdHMocm91dGVyLCBwYXRoKSB7CiAgdmFyIHBhdGhMb3dlciA9IHBhdGgudG9Mb3dlckNhc2UoKTsKICByZXR1cm4gcm91dGVyLm9wdGlvbnMucm91dGVzLnNvbWUoZnVuY3Rpb24gKHJvdXRlKSB7CiAgICByZXR1cm4gcm91dGUucGF0aC50b0xvd2VyQ2FzZSgpID09PSBwYXRoTG93ZXI7CiAgfSk7Cn0="},{"version":3,"sources":["/Users/starfish/oceanus/JavaKeeper/node_modules/@vuepress/core/lib/client/redirect.js"],"names":["handleRedirectForCleanUrls","router","beforeEach","to","from","next","isRouteExists","path","test","endingSlashUrl","endingHtmlUrl","replace","pathLower","toLowerCase","options","routes","some","route"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,0BAAT,CAAqCC,MAArC,EAA6C;AAClDA,EAAAA,MAAM,CAACC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,QAAIC,aAAa,CAACL,MAAD,EAASE,EAAE,CAACI,IAAZ,CAAjB,EAAoC;AAClCF,MAAAA,IAAI;AACL,KAFD,MAEO;AACL,UAAI,CAAC,eAAeG,IAAf,CAAoBL,EAAE,CAACI,IAAvB,CAAL,EAAmC;AACjC,YAAME,cAAc,GAAGN,EAAE,CAACI,IAAH,GAAU,GAAjC;AACA,YAAMG,aAAa,GAAGP,EAAE,CAACI,IAAH,GAAU,OAAhC;;AACA,YAAID,aAAa,CAACL,MAAD,EAASS,aAAT,CAAjB,EAA0C;AACxCL,UAAAA,IAAI,CAACK,aAAD,CAAJ;AACD,SAFD,MAEO,IAAIJ,aAAa,CAACL,MAAD,EAASQ,cAAT,CAAjB,EAA2C;AAChDJ,UAAAA,IAAI,CAACI,cAAD,CAAJ;AACD,SAFM,MAEA;AACLJ,UAAAA,IAAI;AACL;AACF,OAVD,MAUO,IAAI,MAAMG,IAAN,CAAWL,EAAE,CAACI,IAAd,CAAJ,EAAyB;AAC9B,YAAMG,cAAa,GAAGP,EAAE,CAACI,IAAH,CAAQI,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,IAA6B,OAAnD;;AACA,YAAIL,aAAa,CAACL,MAAD,EAASS,cAAT,CAAjB,EAA0C;AACxCL,UAAAA,IAAI,CAACK,cAAD,CAAJ;AACD,SAFD,MAEO;AACLL,UAAAA,IAAI;AACL;AACF,OAPM,MAOA;AACLA,QAAAA,IAAI;AACL;AACF;AACF,GAzBD;AA0BD;;AAED,SAASC,aAAT,CAAwBL,MAAxB,EAAgCM,IAAhC,EAAsC;AACpC,MAAMK,SAAS,GAAGL,IAAI,CAACM,WAAL,EAAlB;AACA,SAAOZ,MAAM,CAACa,OAAP,CAAeC,MAAf,CAAsBC,IAAtB,CAA2B,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACV,IAAN,CAAWM,WAAX,OAA6BD,SAAjC;AAAA,GAAhC,CAAP;AACD","sourcesContent":["// In VuePress, we have following convention about routing:\n//\n//   - `/foo/` means source file is `/foo/{README|index}.md`\n//   - `/foo.html` means your source file is `/foo.md`\n//\n// The original design of VuePress relied on above two styles\n// of routing, especially the calculation involved of routes at\n// default theme. so we can't easily modify `/foo.html` directly\n// to `/foo` (i.e. remove html suffix)\n//\n// This \"temporary\" utility handles redirect of clean urls, with\n// this utility, you'll get:\n//\n// For unknown request `/foo`\n//   - redirect to `/foo.html` if it exists\n//   - redirect to `/foo/` if it exists\n//\n// For unknown request `/foo/`\n//   - redirect to `/foo.html` if it exists\n//\n// If all the above redirect rules don't exist, you'll get a 404\n\nexport function handleRedirectForCleanUrls (router) {\n  router.beforeEach((to, from, next) => {\n    if (isRouteExists(router, to.path)) {\n      next()\n    } else {\n      if (!/(\\/|\\.html)$/.test(to.path)) {\n        const endingSlashUrl = to.path + '/'\n        const endingHtmlUrl = to.path + '.html'\n        if (isRouteExists(router, endingHtmlUrl)) {\n          next(endingHtmlUrl)\n        } else if (isRouteExists(router, endingSlashUrl)) {\n          next(endingSlashUrl)\n        } else {\n          next()\n        }\n      } else if (/\\/$/.test(to.path)) {\n        const endingHtmlUrl = to.path.replace(/\\/$/, '') + '.html'\n        if (isRouteExists(router, endingHtmlUrl)) {\n          next(endingHtmlUrl)\n        } else {\n          next()\n        }\n      } else {\n        next()\n      }\n    }\n  })\n}\n\nfunction isRouteExists (router, path) {\n  const pathLower = path.toLowerCase()\n  return router.options.routes.some(route => route.path.toLowerCase() === pathLower)\n}\n"]}]}